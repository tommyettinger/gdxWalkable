// Generated by Haxe 3.4.2
package hxDaedalus.data.graph;

@SuppressWarnings(value={"rawtypes"})
public class GraphEdge extends haxe.lang.HxObject
{
	static
	{
		hxDaedalus.data.graph.GraphEdge.INC = 0;
	}
	
	public GraphEdge(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public GraphEdge()
	{
		hxDaedalus.data.graph.GraphEdge.__hx_ctor_hxDaedalus_data_graph_GraphEdge(this);
	}
	
	
	public static void __hx_ctor_hxDaedalus_data_graph_GraphEdge(hxDaedalus.data.graph.GraphEdge __hx_this)
	{
		__hx_this._id = hxDaedalus.data.graph.GraphEdge.INC;
		hxDaedalus.data.graph.GraphEdge.INC++;
	}
	
	
	public static int INC;
	
	
	
	public int get_id()
	{
		return this._id;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	public int _id;
	
	public hxDaedalus.data.graph.GraphEdge _prev;
	
	public hxDaedalus.data.graph.GraphEdge _next;
	
	public hxDaedalus.data.graph.GraphEdge _rotPrevEdge;
	
	public hxDaedalus.data.graph.GraphEdge _rotNextEdge;
	
	public hxDaedalus.data.graph.GraphEdge _oppositeEdge;
	
	public hxDaedalus.data.graph.GraphNode _sourceNode;
	
	public hxDaedalus.data.graph.GraphNode _destinationNode;
	
	public hxDaedalus.data.math.EdgeData _data;
	
	public void dispose()
	{
	}
	
	
	public hxDaedalus.data.graph.GraphEdge get_prev()
	{
		return this._prev;
	}
	
	
	public hxDaedalus.data.graph.GraphEdge set_prev(hxDaedalus.data.graph.GraphEdge value)
	{
		this._prev = value;
		return value;
	}
	
	
	public hxDaedalus.data.graph.GraphEdge get_next()
	{
		return this._next;
	}
	
	
	public hxDaedalus.data.graph.GraphEdge set_next(hxDaedalus.data.graph.GraphEdge value)
	{
		this._next = value;
		return value;
	}
	
	
	public hxDaedalus.data.graph.GraphEdge get_rotPrevEdge()
	{
		return this._rotPrevEdge;
	}
	
	
	public hxDaedalus.data.graph.GraphEdge set_rotPrevEdge(hxDaedalus.data.graph.GraphEdge value)
	{
		this._rotPrevEdge = value;
		return value;
	}
	
	
	public hxDaedalus.data.graph.GraphEdge get_rotNextEdge()
	{
		return this._rotNextEdge;
	}
	
	
	public hxDaedalus.data.graph.GraphEdge set_rotNextEdge(hxDaedalus.data.graph.GraphEdge value)
	{
		this._rotNextEdge = value;
		return value;
	}
	
	
	public hxDaedalus.data.graph.GraphEdge get_oppositeEdge()
	{
		return this._oppositeEdge;
	}
	
	
	public hxDaedalus.data.graph.GraphEdge set_oppositeEdge(hxDaedalus.data.graph.GraphEdge value)
	{
		this._oppositeEdge = value;
		return value;
	}
	
	
	public hxDaedalus.data.graph.GraphNode get_sourceNode()
	{
		return this._sourceNode;
	}
	
	
	public hxDaedalus.data.graph.GraphNode set_sourceNode(hxDaedalus.data.graph.GraphNode value)
	{
		this._sourceNode = value;
		return value;
	}
	
	
	public hxDaedalus.data.graph.GraphNode get_destinationNode()
	{
		return this._destinationNode;
	}
	
	
	public hxDaedalus.data.graph.GraphNode set_destinationNode(hxDaedalus.data.graph.GraphNode value)
	{
		this._destinationNode = value;
		return value;
	}
	
	
	public hxDaedalus.data.math.EdgeData get_data()
	{
		return this._data;
	}
	
	
	public hxDaedalus.data.math.EdgeData set_data(hxDaedalus.data.math.EdgeData value)
	{
		this._data = value;
		return value;
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			switch (field.hashCode())
			{
				case 94650:
				{
					if (field.equals("_id")) 
					{
						this._id = ((int) (value) );
						return value;
					}
					
					break;
				}
				
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			switch (field.hashCode())
			{
				case 90810505:
				{
					if (field.equals("_data")) 
					{
						this._data = ((hxDaedalus.data.math.EdgeData) (value) );
						return value;
					}
					
					break;
				}
				
				
				case 3449395:
				{
					if (field.equals("prev")) 
					{
						this.set_prev(((hxDaedalus.data.graph.GraphEdge) (value) ));
						return value;
					}
					
					break;
				}
				
				
				case 1276118257:
				{
					if (field.equals("_destinationNode")) 
					{
						this._destinationNode = ((hxDaedalus.data.graph.GraphNode) (value) );
						return value;
					}
					
					break;
				}
				
				
				case 3377907:
				{
					if (field.equals("next")) 
					{
						this.set_next(((hxDaedalus.data.graph.GraphEdge) (value) ));
						return value;
					}
					
					break;
				}
				
				
				case -23307684:
				{
					if (field.equals("_sourceNode")) 
					{
						this._sourceNode = ((hxDaedalus.data.graph.GraphNode) (value) );
						return value;
					}
					
					break;
				}
				
				
				case 546277767:
				{
					if (field.equals("rotPrevEdge")) 
					{
						this.set_rotPrevEdge(((hxDaedalus.data.graph.GraphEdge) (value) ));
						return value;
					}
					
					break;
				}
				
				
				case 1320793891:
				{
					if (field.equals("_oppositeEdge")) 
					{
						this._oppositeEdge = ((hxDaedalus.data.graph.GraphEdge) (value) );
						return value;
					}
					
					break;
				}
				
				
				case -1049882041:
				{
					if (field.equals("rotNextEdge")) 
					{
						this.set_rotNextEdge(((hxDaedalus.data.graph.GraphEdge) (value) ));
						return value;
					}
					
					break;
				}
				
				
				case -1671925624:
				{
					if (field.equals("_rotNextEdge")) 
					{
						this._rotNextEdge = ((hxDaedalus.data.graph.GraphEdge) (value) );
						return value;
					}
					
					break;
				}
				
				
				case -870691516:
				{
					if (field.equals("oppositeEdge")) 
					{
						this.set_oppositeEdge(((hxDaedalus.data.graph.GraphEdge) (value) ));
						return value;
					}
					
					break;
				}
				
				
				case -75765816:
				{
					if (field.equals("_rotPrevEdge")) 
					{
						this._rotPrevEdge = ((hxDaedalus.data.graph.GraphEdge) (value) );
						return value;
					}
					
					break;
				}
				
				
				case -1111620419:
				{
					if (field.equals("sourceNode")) 
					{
						this.set_sourceNode(((hxDaedalus.data.graph.GraphNode) (value) ));
						return value;
					}
					
					break;
				}
				
				
				case 91112402:
				{
					if (field.equals("_next")) 
					{
						this._next = ((hxDaedalus.data.graph.GraphEdge) (value) );
						return value;
					}
					
					break;
				}
				
				
				case -1762742480:
				{
					if (field.equals("destinationNode")) 
					{
						this.set_destinationNode(((hxDaedalus.data.graph.GraphNode) (value) ));
						return value;
					}
					
					break;
				}
				
				
				case 91183890:
				{
					if (field.equals("_prev")) 
					{
						this._prev = ((hxDaedalus.data.graph.GraphEdge) (value) );
						return value;
					}
					
					break;
				}
				
				
				case 3076010:
				{
					if (field.equals("data")) 
					{
						this.set_data(((hxDaedalus.data.math.EdgeData) (value) ));
						return value;
					}
					
					break;
				}
				
				
				case 94650:
				{
					if (field.equals("_id")) 
					{
						this._id = haxe.lang.Runtime.toInt(value);
						return value;
					}
					
					break;
				}
				
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			switch (field.hashCode())
			{
				case 1415076199:
				{
					if (field.equals("set_data")) 
					{
						return new haxe.lang.Closure(this, "set_data");
					}
					
					break;
				}
				
				
				case 3355:
				{
					if (field.equals("id")) 
					{
						return this.get_id();
					}
					
					break;
				}
				
				
				case 1976188659:
				{
					if (field.equals("get_data")) 
					{
						return new haxe.lang.Closure(this, "get_data");
					}
					
					break;
				}
				
				
				case -1249338716:
				{
					if (field.equals("get_id")) 
					{
						return new haxe.lang.Closure(this, "get_id");
					}
					
					break;
				}
				
				
				case -903824045:
				{
					if (field.equals("set_destinationNode")) 
					{
						return new haxe.lang.Closure(this, "set_destinationNode");
					}
					
					break;
				}
				
				
				case 3449395:
				{
					if (field.equals("prev")) 
					{
						return this.get_prev();
					}
					
					break;
				}
				
				
				case 639903815:
				{
					if (field.equals("get_destinationNode")) 
					{
						return new haxe.lang.Closure(this, "get_destinationNode");
					}
					
					break;
				}
				
				
				case 3377907:
				{
					if (field.equals("next")) 
					{
						return this.get_next();
					}
					
					break;
				}
				
				
				case 191786170:
				{
					if (field.equals("set_sourceNode")) 
					{
						return new haxe.lang.Closure(this, "set_sourceNode");
					}
					
					break;
				}
				
				
				case 546277767:
				{
					if (field.equals("rotPrevEdge")) 
					{
						return this.get_rotPrevEdge();
					}
					
					break;
				}
				
				
				case 1963522374:
				{
					if (field.equals("get_sourceNode")) 
					{
						return new haxe.lang.Closure(this, "get_sourceNode");
					}
					
					break;
				}
				
				
				case -1049882041:
				{
					if (field.equals("rotNextEdge")) 
					{
						return this.get_rotNextEdge();
					}
					
					break;
				}
				
				
				case 1867557377:
				{
					if (field.equals("set_oppositeEdge")) 
					{
						return new haxe.lang.Closure(this, "set_oppositeEdge");
					}
					
					break;
				}
				
				
				case -870691516:
				{
					if (field.equals("oppositeEdge")) 
					{
						return this.get_oppositeEdge();
					}
					
					break;
				}
				
				
				case -595967091:
				{
					if (field.equals("get_oppositeEdge")) 
					{
						return new haxe.lang.Closure(this, "get_oppositeEdge");
					}
					
					break;
				}
				
				
				case -1111620419:
				{
					if (field.equals("sourceNode")) 
					{
						return this.get_sourceNode();
					}
					
					break;
				}
				
				
				case 701016554:
				{
					if (field.equals("set_rotNextEdge")) 
					{
						return new haxe.lang.Closure(this, "set_rotNextEdge");
					}
					
					break;
				}
				
				
				case -1762742480:
				{
					if (field.equals("destinationNode")) 
					{
						return this.get_destinationNode();
					}
					
					break;
				}
				
				
				case -209735970:
				{
					if (field.equals("get_rotNextEdge")) 
					{
						return new haxe.lang.Closure(this, "get_rotNextEdge");
					}
					
					break;
				}
				
				
				case 3076010:
				{
					if (field.equals("data")) 
					{
						return this.get_data();
					}
					
					break;
				}
				
				
				case -1997790934:
				{
					if (field.equals("set_rotPrevEdge")) 
					{
						return new haxe.lang.Closure(this, "set_rotPrevEdge");
					}
					
					break;
				}
				
				
				case 94650:
				{
					if (field.equals("_id")) 
					{
						return this._id;
					}
					
					break;
				}
				
				
				case 1386423838:
				{
					if (field.equals("get_rotPrevEdge")) 
					{
						return new haxe.lang.Closure(this, "get_rotPrevEdge");
					}
					
					break;
				}
				
				
				case 91183890:
				{
					if (field.equals("_prev")) 
					{
						return this._prev;
					}
					
					break;
				}
				
				
				case 1415378096:
				{
					if (field.equals("set_next")) 
					{
						return new haxe.lang.Closure(this, "set_next");
					}
					
					break;
				}
				
				
				case 91112402:
				{
					if (field.equals("_next")) 
					{
						return this._next;
					}
					
					break;
				}
				
				
				case 1976490556:
				{
					if (field.equals("get_next")) 
					{
						return new haxe.lang.Closure(this, "get_next");
					}
					
					break;
				}
				
				
				case -75765816:
				{
					if (field.equals("_rotPrevEdge")) 
					{
						return this._rotPrevEdge;
					}
					
					break;
				}
				
				
				case 1415449584:
				{
					if (field.equals("set_prev")) 
					{
						return new haxe.lang.Closure(this, "set_prev");
					}
					
					break;
				}
				
				
				case -1671925624:
				{
					if (field.equals("_rotNextEdge")) 
					{
						return this._rotNextEdge;
					}
					
					break;
				}
				
				
				case 1976562044:
				{
					if (field.equals("get_prev")) 
					{
						return new haxe.lang.Closure(this, "get_prev");
					}
					
					break;
				}
				
				
				case 1320793891:
				{
					if (field.equals("_oppositeEdge")) 
					{
						return this._oppositeEdge;
					}
					
					break;
				}
				
				
				case 1671767583:
				{
					if (field.equals("dispose")) 
					{
						return new haxe.lang.Closure(this, "dispose");
					}
					
					break;
				}
				
				
				case -23307684:
				{
					if (field.equals("_sourceNode")) 
					{
						return this._sourceNode;
					}
					
					break;
				}
				
				
				case 90810505:
				{
					if (field.equals("_data")) 
					{
						return this._data;
					}
					
					break;
				}
				
				
				case 1276118257:
				{
					if (field.equals("_destinationNode")) 
					{
						return this._destinationNode;
					}
					
					break;
				}
				
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			switch (field.hashCode())
			{
				case 94650:
				{
					if (field.equals("_id")) 
					{
						return this._id;
					}
					
					break;
				}
				
				
				case 3355:
				{
					if (field.equals("id")) 
					{
						return this.get_id();
					}
					
					break;
				}
				
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		{
			boolean __temp_executeDef1 = true;
			switch (field.hashCode())
			{
				case 1415076199:
				{
					if (field.equals("set_data")) 
					{
						return this.set_data(((hxDaedalus.data.math.EdgeData) (dynargs.__get(0)) ));
					}
					
					break;
				}
				
				
				case -1249338716:
				{
					if (field.equals("get_id")) 
					{
						return this.get_id();
					}
					
					break;
				}
				
				
				case 1976188659:
				{
					if (field.equals("get_data")) 
					{
						return this.get_data();
					}
					
					break;
				}
				
				
				case 1671767583:
				{
					if (field.equals("dispose")) 
					{
						__temp_executeDef1 = false;
						this.dispose();
					}
					
					break;
				}
				
				
				case -903824045:
				{
					if (field.equals("set_destinationNode")) 
					{
						return this.set_destinationNode(((hxDaedalus.data.graph.GraphNode) (dynargs.__get(0)) ));
					}
					
					break;
				}
				
				
				case 1976562044:
				{
					if (field.equals("get_prev")) 
					{
						return this.get_prev();
					}
					
					break;
				}
				
				
				case 639903815:
				{
					if (field.equals("get_destinationNode")) 
					{
						return this.get_destinationNode();
					}
					
					break;
				}
				
				
				case 1415449584:
				{
					if (field.equals("set_prev")) 
					{
						return this.set_prev(((hxDaedalus.data.graph.GraphEdge) (dynargs.__get(0)) ));
					}
					
					break;
				}
				
				
				case 191786170:
				{
					if (field.equals("set_sourceNode")) 
					{
						return this.set_sourceNode(((hxDaedalus.data.graph.GraphNode) (dynargs.__get(0)) ));
					}
					
					break;
				}
				
				
				case 1976490556:
				{
					if (field.equals("get_next")) 
					{
						return this.get_next();
					}
					
					break;
				}
				
				
				case 1963522374:
				{
					if (field.equals("get_sourceNode")) 
					{
						return this.get_sourceNode();
					}
					
					break;
				}
				
				
				case 1415378096:
				{
					if (field.equals("set_next")) 
					{
						return this.set_next(((hxDaedalus.data.graph.GraphEdge) (dynargs.__get(0)) ));
					}
					
					break;
				}
				
				
				case 1867557377:
				{
					if (field.equals("set_oppositeEdge")) 
					{
						return this.set_oppositeEdge(((hxDaedalus.data.graph.GraphEdge) (dynargs.__get(0)) ));
					}
					
					break;
				}
				
				
				case 1386423838:
				{
					if (field.equals("get_rotPrevEdge")) 
					{
						return this.get_rotPrevEdge();
					}
					
					break;
				}
				
				
				case -595967091:
				{
					if (field.equals("get_oppositeEdge")) 
					{
						return this.get_oppositeEdge();
					}
					
					break;
				}
				
				
				case -1997790934:
				{
					if (field.equals("set_rotPrevEdge")) 
					{
						return this.set_rotPrevEdge(((hxDaedalus.data.graph.GraphEdge) (dynargs.__get(0)) ));
					}
					
					break;
				}
				
				
				case 701016554:
				{
					if (field.equals("set_rotNextEdge")) 
					{
						return this.set_rotNextEdge(((hxDaedalus.data.graph.GraphEdge) (dynargs.__get(0)) ));
					}
					
					break;
				}
				
				
				case -209735970:
				{
					if (field.equals("get_rotNextEdge")) 
					{
						return this.get_rotNextEdge();
					}
					
					break;
				}
				
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		baseArr.push("_data");
		baseArr.push("_destinationNode");
		baseArr.push("_sourceNode");
		baseArr.push("_oppositeEdge");
		baseArr.push("_rotNextEdge");
		baseArr.push("_rotPrevEdge");
		baseArr.push("_next");
		baseArr.push("_prev");
		baseArr.push("_id");
		baseArr.push("data");
		baseArr.push("destinationNode");
		baseArr.push("sourceNode");
		baseArr.push("oppositeEdge");
		baseArr.push("rotNextEdge");
		baseArr.push("rotPrevEdge");
		baseArr.push("next");
		baseArr.push("prev");
		baseArr.push("id");
		super.__hx_getFields(baseArr);
	}
	
	
}


