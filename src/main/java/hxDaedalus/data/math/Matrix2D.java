// Generated by Haxe 3.4.2
package hxDaedalus.data.math;

@SuppressWarnings(value={"rawtypes"})
public class Matrix2D extends haxe.lang.HxObject
{
	public Matrix2D(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Matrix2D(java.lang.Object a_, java.lang.Object b_, java.lang.Object c_, java.lang.Object d_, java.lang.Object e_, java.lang.Object f_)
	{
		hxDaedalus.data.math.Matrix2D.__hx_ctor_hxDaedalus_data_math_Matrix2D(this, a_, b_, c_, d_, e_, f_);
	}
	
	
	public static void __hx_ctor_hxDaedalus_data_math_Matrix2D(hxDaedalus.data.math.Matrix2D __hx_this, java.lang.Object a_, java.lang.Object b_, java.lang.Object c_, java.lang.Object d_, java.lang.Object e_, java.lang.Object f_)
	{
		double __temp_f_16 = ( (haxe.lang.Runtime.eq(f_, null)) ? (((double) (0) )) : haxe.lang.Runtime.toDouble(f_));
		double __temp_e_15 = ( (haxe.lang.Runtime.eq(e_, null)) ? (((double) (0) )) : haxe.lang.Runtime.toDouble(e_));
		double __temp_d_14 = ( (haxe.lang.Runtime.eq(d_, null)) ? (((double) (1) )) : haxe.lang.Runtime.toDouble(d_));
		double __temp_c_13 = ( (haxe.lang.Runtime.eq(c_, null)) ? (((double) (0) )) : haxe.lang.Runtime.toDouble(c_));
		double __temp_b_12 = ( (haxe.lang.Runtime.eq(b_, null)) ? (((double) (0) )) : haxe.lang.Runtime.toDouble(b_));
		__hx_this.a = ( (haxe.lang.Runtime.eq(a_, null)) ? (((double) (1) )) : haxe.lang.Runtime.toDouble(a_));
		__hx_this.b = __temp_b_12;
		__hx_this.c = __temp_c_13;
		__hx_this.d = __temp_d_14;
		__hx_this.e = __temp_e_15;
		__hx_this.f = __temp_f_16;
	}
	
	
	public double a;
	
	public double b;
	
	public double c;
	
	public double d;
	
	public double e;
	
	public double f;
	
	public void identity()
	{
		this.a = 1;
		this.b = 0;
		this.c = 0;
		this.d = 1;
		this.e = 0;
		this.f = 0;
	}
	
	
	public void translate(double tx, double ty)
	{
		this.e += tx;
		this.f += ty;
	}
	
	
	public void scale(double sx, double sy)
	{
		this.a *= sx;
		this.b *= sy;
		this.c *= sx;
		this.d *= sy;
		this.e *= sx;
		this.f *= sy;
	}
	
	
	public void rotate(double rad)
	{
		double cos = java.lang.Math.cos(rad);
		double sin = java.lang.Math.sin(rad);
		double a_ = ( ( this.a * cos ) + ( this.b *  - (sin)  ) );
		double b_ = ( ( this.a * sin ) + ( this.b * cos ) );
		double c_ = ( ( this.c * cos ) + ( this.d *  - (sin)  ) );
		double d_ = ( ( this.c * sin ) + ( this.d * cos ) );
		double e_ = ( ( this.e * cos ) + ( this.f *  - (sin)  ) );
		double f_ = ( ( this.e * sin ) + ( this.f * cos ) );
		this.a = a_;
		this.b = b_;
		this.c = c_;
		this.d = d_;
		this.e = e_;
		this.f = f_;
	}
	
	
	public hxDaedalus.data.math.Matrix2D clone()
	{
		return new hxDaedalus.data.math.Matrix2D(this.a, this.b, this.c, this.d, this.e, this.f);
	}
	
	
	public void tranform(hxDaedalus.data.math.Point2D point)
	{
		double x = ( ( ( this.a * point.x ) + ( this.c * point.y ) ) + this.e );
		double y = ( ( ( this.b * point.x ) + ( this.d * point.y ) ) + this.f );
		point.x = x;
		point.y = y;
	}
	
	
	public double transformX(double x, double y)
	{
		return ( ( ( this.a * x ) + ( this.c * y ) ) + this.e );
	}
	
	
	public double transformY(double x, double y)
	{
		return ( ( ( this.b * x ) + ( this.d * y ) ) + this.f );
	}
	
	
	public void concat(hxDaedalus.data.math.Matrix2D matrix)
	{
		double a_ = ( ( this.a * matrix.a ) + ( this.b * matrix.c ) );
		double b_ = ( ( this.a * matrix.b ) + ( this.b * matrix.d ) );
		double c_ = ( ( this.c * matrix.a ) + ( this.d * matrix.c ) );
		double d_ = ( ( this.c * matrix.b ) + ( this.d * matrix.d ) );
		double e_ = ( ( ( this.e * matrix.a ) + ( this.f * matrix.c ) ) + matrix.e );
		double f_ = ( ( ( this.e * matrix.b ) + ( this.f * matrix.d ) ) + matrix.f );
		this.a = a_;
		this.b = b_;
		this.c = c_;
		this.d = d_;
		this.e = e_;
		this.f = f_;
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			switch (field.hashCode())
			{
				case 102:
				{
					if (field.equals("f")) 
					{
						this.f = value;
						return value;
					}
					
					break;
				}
				
				
				case 97:
				{
					if (field.equals("a")) 
					{
						this.a = value;
						return value;
					}
					
					break;
				}
				
				
				case 101:
				{
					if (field.equals("e")) 
					{
						this.e = value;
						return value;
					}
					
					break;
				}
				
				
				case 98:
				{
					if (field.equals("b")) 
					{
						this.b = value;
						return value;
					}
					
					break;
				}
				
				
				case 100:
				{
					if (field.equals("d")) 
					{
						this.d = value;
						return value;
					}
					
					break;
				}
				
				
				case 99:
				{
					if (field.equals("c")) 
					{
						this.c = value;
						return value;
					}
					
					break;
				}
				
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			switch (field.hashCode())
			{
				case 102:
				{
					if (field.equals("f")) 
					{
						this.f = haxe.lang.Runtime.toDouble(value);
						return value;
					}
					
					break;
				}
				
				
				case 97:
				{
					if (field.equals("a")) 
					{
						this.a = haxe.lang.Runtime.toDouble(value);
						return value;
					}
					
					break;
				}
				
				
				case 101:
				{
					if (field.equals("e")) 
					{
						this.e = haxe.lang.Runtime.toDouble(value);
						return value;
					}
					
					break;
				}
				
				
				case 98:
				{
					if (field.equals("b")) 
					{
						this.b = haxe.lang.Runtime.toDouble(value);
						return value;
					}
					
					break;
				}
				
				
				case 100:
				{
					if (field.equals("d")) 
					{
						this.d = haxe.lang.Runtime.toDouble(value);
						return value;
					}
					
					break;
				}
				
				
				case 99:
				{
					if (field.equals("c")) 
					{
						this.c = haxe.lang.Runtime.toDouble(value);
						return value;
					}
					
					break;
				}
				
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			switch (field.hashCode())
			{
				case -1354795244:
				{
					if (field.equals("concat")) 
					{
						return new haxe.lang.Closure(this, "concat");
					}
					
					break;
				}
				
				
				case 97:
				{
					if (field.equals("a")) 
					{
						return this.a;
					}
					
					break;
				}
				
				
				case -1727069587:
				{
					if (field.equals("transformY")) 
					{
						return new haxe.lang.Closure(this, "transformY");
					}
					
					break;
				}
				
				
				case 98:
				{
					if (field.equals("b")) 
					{
						return this.b;
					}
					
					break;
				}
				
				
				case -1727069588:
				{
					if (field.equals("transformX")) 
					{
						return new haxe.lang.Closure(this, "transformX");
					}
					
					break;
				}
				
				
				case 99:
				{
					if (field.equals("c")) 
					{
						return this.c;
					}
					
					break;
				}
				
				
				case 1280504431:
				{
					if (field.equals("tranform")) 
					{
						return new haxe.lang.Closure(this, "tranform");
					}
					
					break;
				}
				
				
				case 100:
				{
					if (field.equals("d")) 
					{
						return this.d;
					}
					
					break;
				}
				
				
				case 94756189:
				{
					if (field.equals("clone")) 
					{
						return new haxe.lang.Closure(this, "clone");
					}
					
					break;
				}
				
				
				case 101:
				{
					if (field.equals("e")) 
					{
						return this.e;
					}
					
					break;
				}
				
				
				case -925180581:
				{
					if (field.equals("rotate")) 
					{
						return new haxe.lang.Closure(this, "rotate");
					}
					
					break;
				}
				
				
				case 102:
				{
					if (field.equals("f")) 
					{
						return this.f;
					}
					
					break;
				}
				
				
				case 109250890:
				{
					if (field.equals("scale")) 
					{
						return new haxe.lang.Closure(this, "scale");
					}
					
					break;
				}
				
				
				case -135761730:
				{
					if (field.equals("identity")) 
					{
						return new haxe.lang.Closure(this, "identity");
					}
					
					break;
				}
				
				
				case 1052832078:
				{
					if (field.equals("translate")) 
					{
						return new haxe.lang.Closure(this, "translate");
					}
					
					break;
				}
				
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			switch (field.hashCode())
			{
				case 102:
				{
					if (field.equals("f")) 
					{
						return this.f;
					}
					
					break;
				}
				
				
				case 97:
				{
					if (field.equals("a")) 
					{
						return this.a;
					}
					
					break;
				}
				
				
				case 101:
				{
					if (field.equals("e")) 
					{
						return this.e;
					}
					
					break;
				}
				
				
				case 98:
				{
					if (field.equals("b")) 
					{
						return this.b;
					}
					
					break;
				}
				
				
				case 100:
				{
					if (field.equals("d")) 
					{
						return this.d;
					}
					
					break;
				}
				
				
				case 99:
				{
					if (field.equals("c")) 
					{
						return this.c;
					}
					
					break;
				}
				
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		{
			boolean __temp_executeDef1 = true;
			switch (field.hashCode())
			{
				case -1354795244:
				{
					if (field.equals("concat")) 
					{
						__temp_executeDef1 = false;
						this.concat(((hxDaedalus.data.math.Matrix2D) (dynargs.__get(0)) ));
					}
					
					break;
				}
				
				
				case -135761730:
				{
					if (field.equals("identity")) 
					{
						__temp_executeDef1 = false;
						this.identity();
					}
					
					break;
				}
				
				
				case -1727069587:
				{
					if (field.equals("transformY")) 
					{
						return this.transformY(haxe.lang.Runtime.toDouble(dynargs.__get(0)), haxe.lang.Runtime.toDouble(dynargs.__get(1)));
					}
					
					break;
				}
				
				
				case 1052832078:
				{
					if (field.equals("translate")) 
					{
						__temp_executeDef1 = false;
						this.translate(haxe.lang.Runtime.toDouble(dynargs.__get(0)), haxe.lang.Runtime.toDouble(dynargs.__get(1)));
					}
					
					break;
				}
				
				
				case -1727069588:
				{
					if (field.equals("transformX")) 
					{
						return this.transformX(haxe.lang.Runtime.toDouble(dynargs.__get(0)), haxe.lang.Runtime.toDouble(dynargs.__get(1)));
					}
					
					break;
				}
				
				
				case 109250890:
				{
					if (field.equals("scale")) 
					{
						__temp_executeDef1 = false;
						this.scale(haxe.lang.Runtime.toDouble(dynargs.__get(0)), haxe.lang.Runtime.toDouble(dynargs.__get(1)));
					}
					
					break;
				}
				
				
				case 1280504431:
				{
					if (field.equals("tranform")) 
					{
						__temp_executeDef1 = false;
						this.tranform(((hxDaedalus.data.math.Point2D) (dynargs.__get(0)) ));
					}
					
					break;
				}
				
				
				case -925180581:
				{
					if (field.equals("rotate")) 
					{
						__temp_executeDef1 = false;
						this.rotate(haxe.lang.Runtime.toDouble(dynargs.__get(0)));
					}
					
					break;
				}
				
				
				case 94756189:
				{
					if (field.equals("clone")) 
					{
						return this.clone();
					}
					
					break;
				}
				
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		baseArr.push("f");
		baseArr.push("e");
		baseArr.push("d");
		baseArr.push("c");
		baseArr.push("b");
		baseArr.push("a");
		super.__hx_getFields(baseArr);
	}
	
	
}


