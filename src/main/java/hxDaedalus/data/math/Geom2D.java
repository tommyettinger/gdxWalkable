// Generated by Haxe 3.4.2
package hxDaedalus.data.math;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Geom2D extends haxe.lang.HxObject
{
	static
	{
		//line 51 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.math.Geom2D.__samples = new haxe.root.Array<hxDaedalus.data.Vertex>();
		//line 544 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.math.Geom2D.__circumcenter = new hxDaedalus.data.math.Point2D(null, null);
	}
	
	public Geom2D(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Geom2D()
	{
		//line 1021 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.math.Geom2D.__hx_ctor_hxDaedalus_data_math_Geom2D(this);
	}
	
	
	public static void __hx_ctor_hxDaedalus_data_math_Geom2D(hxDaedalus.data.math.Geom2D __hx_this)
	{
	}
	
	
	public static hxDaedalus.data.math.RandGenerator _randGen;
	
	public static haxe.root.Array<hxDaedalus.data.Vertex> __samples;
	
	public static hxDaedalus.data.math.Intersection locatePosition(double x, double y, hxDaedalus.data.Mesh mesh)
	{
		//line 56 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( hxDaedalus.data.math.Geom2D._randGen == null )) 
		{
			//line 56 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			hxDaedalus.data.math.Geom2D._randGen = new hxDaedalus.data.math.RandGenerator(null, null, null);
		}
		
		//line 57 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.math.Geom2D._randGen.set_seed(((int) (( ( x * 10 ) + ( 4 * y ) )) ));
		//line 59 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int i = 0;
		//line 61 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.math.Geom2D.__samples.splice(0, hxDaedalus.data.math.Geom2D.__samples.length);
		//line 62 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int numSamples = ((int) (java.lang.Math.pow(((double) (mesh._vertices.length) ), 0.333333333333333315)) );
		//line 63 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.math.Geom2D._randGen.rangeMin = 0;
		//line 64 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.math.Geom2D._randGen.rangeMax = ( mesh._vertices.length - 1 );
		//line 65 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		{
			//line 65 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			int _g1 = 0;
			//line 65 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			int _g = numSamples;
			//line 65 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			while (( _g1 < _g ))
			{
				//line 65 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				int i1 = _g1++;
				//line 66 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				int _rnd = hxDaedalus.data.math.Geom2D._randGen.next();
				//line 68 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				boolean cond = ( ( _rnd < 0 ) || ( _rnd > ( mesh._vertices.length - 1 ) ) );
				//line 69 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				{
					//line 69 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					boolean cond1 = ( mesh._vertices == null );
					//line 69 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					java.lang.String message = ( "vertices: " + mesh._vertices.length );
				}
				
				//line 70 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				hxDaedalus.data.math.Geom2D.__samples.push(mesh._vertices.__get(_rnd));
			}
			
		}
		
		//line 73 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.Vertex currVertex = null;
		//line 74 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.math.Point2D currVertexPos = null;
		//line 75 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double distSquared = 0.0;
		//line 76 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double minDistSquared = java.lang.Double.POSITIVE_INFINITY;
		//line 77 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.Vertex closedVertex = null;
		//line 78 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		{
			//line 78 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			int _g11 = 0;
			//line 78 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			int _g2 = numSamples;
			//line 78 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			while (( _g11 < _g2 ))
			{
				//line 78 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				int i2 = _g11++;
				//line 79 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				currVertex = hxDaedalus.data.math.Geom2D.__samples.__get(i2);
				//line 80 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				currVertexPos = currVertex.get_pos();
				//line 81 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				distSquared = ( ( (( currVertexPos.x - x )) * (( currVertexPos.x - x )) ) + ( (( currVertexPos.y - y )) * (( currVertexPos.y - y )) ) );
				//line 82 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				if (( distSquared < minDistSquared )) 
				{
					//line 84 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					minDistSquared = distSquared;
					//line 85 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					closedVertex = currVertex;
				}
				
			}
			
		}
		
		//line 89 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.Face currFace = null;
		//line 90 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.iterators.FromVertexToHoldingFaces iterFace = new hxDaedalus.iterators.FromVertexToHoldingFaces();
		//line 91 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		iterFace.set_fromVertex(closedVertex);
		//line 92 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		currFace = iterFace.next();
		//line 94 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object> faceVisited = new haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>();
		//line 95 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.Edge currEdge = null;
		//line 96 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.iterators.FromFaceToInnerEdges iterEdge = new hxDaedalus.iterators.FromFaceToInnerEdges();
		//line 97 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.math.Intersection objectContainer = hxDaedalus.data.math.Intersection.ENull;
		//line 98 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int relativPos = 0;
		//line 99 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int numIter = 0;
		//line 101 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		while (true)
		{
			//line 101 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			boolean tmp = false;
			//line 101 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (( ! (haxe.lang.Runtime.toBool(((java.lang.Object) (faceVisited.get(currFace)) ))) )) 
			{
				//line 101 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				objectContainer = hxDaedalus.data.math.Geom2D.isInFace(x, y, currFace);
				//line 101 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				hxDaedalus.data.math.Intersection _g3 = objectContainer;
				//line 101 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				switch (_g3.index)
				{
					case 3:
					{
						//line 101 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						tmp = true;
						//line 101 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						break;
					}
					
					
					default:
					{
						//line 101 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						tmp = false;
						//line 101 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						break;
					}
					
				}
				
			}
			else
			{
				//line 101 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				tmp = true;
			}
			
			//line 101 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if ( ! (tmp) ) 
			{
				//line 101 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				break;
			}
			
			//line 103 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			faceVisited.get(currFace);
			//line 105 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			 ++ numIter;
			//line 106 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			boolean tmp1 = ( numIter == 50 );
			//line 110 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			iterEdge.set_fromFace(currFace);
			//line 111 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			while (true)
			{
				//line 113 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				currEdge = iterEdge.next();
				//line 114 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				if (( currEdge == null )) 
				{
					//line 117 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					return hxDaedalus.data.math.Intersection.ENull;
				}
				
				//line 119 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				relativPos = hxDaedalus.data.math.Geom2D.getRelativePosition(x, y, currEdge);
				//line 111 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				if ( ! ((( ( relativPos == 1 ) || ( relativPos == 0 ) ))) ) 
				{
					//line 111 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					break;
				}
				
			}
			
			//line 122 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			currFace = currEdge.get_rightFace();
		}
		
		//line 125 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		return objectContainer;
	}
	
	
	public static boolean isCircleIntersectingAnyConstraint(double x, double y, double radius, hxDaedalus.data.Mesh mesh)
	{
		//line 130 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( ( ( ( x <= 0 ) || ( x >= mesh.get_width() ) ) || ( y <= 0 ) ) || ( y >= mesh.get_height() ) )) 
		{
			//line 130 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return true;
		}
		
		//line 132 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.math.Intersection loc = hxDaedalus.data.math.Geom2D.locatePosition(x, y, mesh);
		//line 133 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.Face face = null;
		//line 134 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		switch (loc.index)
		{
			case 0:
			{
				//line 135 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				hxDaedalus.data.Vertex vertex = ((hxDaedalus.data.Vertex) (loc.params[0]) );
				//line 136 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				face = vertex.get_edge().get_leftFace();
				//line 135 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				break;
			}
			
			
			case 1:
			{
				//line 137 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				hxDaedalus.data.Edge edge = ((hxDaedalus.data.Edge) (loc.params[0]) );
				//line 138 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				face = edge.get_leftFace();
				//line 137 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				break;
			}
			
			
			case 2:
			{
				//line 139 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				hxDaedalus.data.Face face_ = ((hxDaedalus.data.Face) (loc.params[0]) );
				//line 140 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				face = face_;
				//line 139 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				break;
			}
			
			
			case 3:
			{
				//line 142 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				face = null;
				//line 142 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				break;
			}
			
			
		}
		
		//line 147 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double radiusSquared = ( radius * radius );
		//line 148 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.math.Point2D pos = null;
		//line 149 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double distSquared = 0.0;
		//line 150 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		pos = face.get_edge().get_originVertex().get_pos();
		//line 151 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		distSquared = ( ( (( pos.x - x )) * (( pos.x - x )) ) + ( (( pos.y - y )) * (( pos.y - y )) ) );
		//line 152 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( distSquared <= radiusSquared )) 
		{
			//line 154 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return true;
		}
		
		//line 156 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		pos = face.get_edge().get_nextLeftEdge().get_originVertex().get_pos();
		//line 157 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		distSquared = ( ( (( pos.x - x )) * (( pos.x - x )) ) + ( (( pos.y - y )) * (( pos.y - y )) ) );
		//line 158 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( distSquared <= radiusSquared )) 
		{
			//line 160 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return true;
		}
		
		//line 162 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		pos = face.get_edge().get_nextLeftEdge().get_nextLeftEdge().get_originVertex().get_pos();
		//line 163 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		distSquared = ( ( (( pos.x - x )) * (( pos.x - x )) ) + ( (( pos.y - y )) * (( pos.y - y )) ) );
		//line 164 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( distSquared <= radiusSquared )) 
		{
			//line 166 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return true;
		}
		
		//line 171 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		haxe.root.Array<hxDaedalus.data.Edge> edgesToCheck = new haxe.root.Array<hxDaedalus.data.Edge>();
		//line 172 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		edgesToCheck.push(face.get_edge());
		//line 173 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		edgesToCheck.push(face.get_edge().get_nextLeftEdge());
		//line 174 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		edgesToCheck.push(face.get_edge().get_nextLeftEdge().get_nextLeftEdge());
		//line 176 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.Edge edge1 = null;
		//line 177 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.math.Point2D pos1 = null;
		//line 178 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.math.Point2D pos2 = null;
		//line 179 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		haxe.ds.ObjectMap<hxDaedalus.data.Edge, java.lang.Object> checkedEdges = new haxe.ds.ObjectMap<hxDaedalus.data.Edge, java.lang.Object>();
		//line 180 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		boolean intersecting = false;
		//line 181 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		while (( edgesToCheck.length > 0 ))
		{
			//line 183 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			edge1 = ((hxDaedalus.data.Edge) (edgesToCheck.pop()) );
			//line 184 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			checkedEdges.set(edge1, true);
			//line 185 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			pos1 = edge1.get_originVertex().get_pos();
			//line 186 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			pos2 = edge1.get_destinationVertex().get_pos();
			//line 187 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			intersecting = hxDaedalus.data.math.Geom2D.intersectionsSegmentCircle(pos1.x, pos1.y, pos2.x, pos2.y, x, y, radius, null);
			//line 188 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (intersecting) 
			{
				//line 190 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				if (edge1.get_isConstrained()) 
				{
					//line 191 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					return true;
				}
				else
				{
					//line 193 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					edge1 = edge1.get_oppositeEdge().get_nextLeftEdge();
					//line 194 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					if (( ( ( ( ! (haxe.lang.Runtime.toBool(((java.lang.Object) (checkedEdges.get(edge1)) ))) ) && ( ! (haxe.lang.Runtime.toBool(checkedEdges.get(edge1.get_oppositeEdge()))) ) ) && ( edgesToCheck.indexOf(edge1, null) == -1 ) ) && ( edgesToCheck.indexOf(edge1.get_oppositeEdge(), null) == -1 ) )) 
					{
						//line 196 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						edgesToCheck.push(edge1);
					}
					
					//line 198 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					edge1 = edge1.get_nextLeftEdge();
					//line 199 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					if (( ( ( ( ! (haxe.lang.Runtime.toBool(((java.lang.Object) (checkedEdges.get(edge1)) ))) ) && ( ! (haxe.lang.Runtime.toBool(checkedEdges.get(edge1.get_oppositeEdge()))) ) ) && ( edgesToCheck.indexOf(edge1, null) == -1 ) ) && ( edgesToCheck.indexOf(edge1.get_oppositeEdge(), null) == -1 ) )) 
					{
						//line 201 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						edgesToCheck.push(edge1);
					}
					
				}
				
			}
			
		}
		
		//line 207 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		return false;
	}
	
	
	public static int getDirection(double x1, double y1, double x2, double y2, double x3, double y3)
	{
		//line 219 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double dot = ( ( (( x3 - x1 )) * (( y2 - y1 )) ) + ( (( y3 - y1 )) * ((  - (x2)  + x1 )) ) );
		//line 222 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( dot == 0 )) 
		{
			//line 222 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return 0;
		}
		else
		{
			//line 222 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (( dot > 0 )) 
			{
				//line 222 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				return 1;
			}
			else
			{
				//line 222 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				return -1;
			}
			
		}
		
	}
	
	
	public static int getDirection2(double x1, double y1, double x2, double y2, double x3, double y3)
	{
		//line 234 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double dot = ( ( (( x3 - x1 )) * (( y2 - y1 )) ) + ( (( y3 - y1 )) * ((  - (x2)  + x1 )) ) );
		//line 237 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( dot == 0 )) 
		{
			//line 239 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return 0;
		}
		else
		{
			//line 241 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (( dot > 0 )) 
			{
				//line 243 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				if (( hxDaedalus.data.math.Geom2D.distanceSquaredPointToLine(x3, y3, x1, y1, x2, y2) <= 0.0001 )) 
				{
					//line 244 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					return 0;
				}
				else
				{
					//line 246 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					return 1;
				}
				
			}
			else
			{
				//line 251 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				if (( hxDaedalus.data.math.Geom2D.distanceSquaredPointToLine(x3, y3, x1, y1, x2, y2) <= 0.0001 )) 
				{
					//line 252 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					return 0;
				}
				else
				{
					//line 254 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					return -1;
				}
				
			}
			
		}
		
	}
	
	
	public static int getRelativePosition(double x, double y, hxDaedalus.data.Edge eUp)
	{
		//line 267 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		return hxDaedalus.data.math.Geom2D.getDirection(eUp.get_originVertex().get_pos().x, eUp.get_originVertex().get_pos().y, eUp.get_destinationVertex().get_pos().x, eUp.get_destinationVertex().get_pos().y, x, y);
	}
	
	
	public static int getRelativePosition2(double x, double y, hxDaedalus.data.Edge eUp)
	{
		//line 272 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		return hxDaedalus.data.math.Geom2D.getDirection2(eUp.get_originVertex().get_pos().x, eUp.get_originVertex().get_pos().y, eUp.get_destinationVertex().get_pos().x, eUp.get_destinationVertex().get_pos().y, x, y);
	}
	
	
	public static hxDaedalus.data.math.Intersection isInFace(double x, double y, hxDaedalus.data.Face polygon)
	{
		//line 285 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.math.Intersection result = hxDaedalus.data.math.Intersection.ENull;
		//line 287 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.Edge e1_2 = polygon.get_edge();
		//line 288 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.Edge e2_3 = e1_2.get_nextLeftEdge();
		//line 289 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.Edge e3_1 = e2_3.get_nextLeftEdge();
		//line 290 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( ( ( hxDaedalus.data.math.Geom2D.getRelativePosition(x, y, e1_2) >= 0 ) && ( hxDaedalus.data.math.Geom2D.getRelativePosition(x, y, e2_3) >= 0 ) ) && ( hxDaedalus.data.math.Geom2D.getRelativePosition(x, y, e3_1) >= 0 ) )) 
		{
			//line 292 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			hxDaedalus.data.Vertex v1 = e1_2.get_originVertex();
			//line 293 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			hxDaedalus.data.Vertex v2 = e2_3.get_originVertex();
			//line 294 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			hxDaedalus.data.Vertex v3 = e3_1.get_originVertex();
			//line 296 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double x1 = v1.get_pos().x;
			//line 297 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double y1 = v1.get_pos().y;
			//line 298 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double x2 = v2.get_pos().x;
			//line 299 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double y2 = v2.get_pos().y;
			//line 300 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double x3 = v3.get_pos().x;
			//line 301 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double y3 = v3.get_pos().y;
			//line 303 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double v_v1squaredLength = ( ( (( x1 - x )) * (( x1 - x )) ) + ( (( y1 - y )) * (( y1 - y )) ) );
			//line 304 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double v_v2squaredLength = ( ( (( x2 - x )) * (( x2 - x )) ) + ( (( y2 - y )) * (( y2 - y )) ) );
			//line 305 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double v_v3squaredLength = ( ( (( x3 - x )) * (( x3 - x )) ) + ( (( y3 - y )) * (( y3 - y )) ) );
			//line 306 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double v1_v2squaredLength = ( ( (( x2 - x1 )) * (( x2 - x1 )) ) + ( (( y2 - y1 )) * (( y2 - y1 )) ) );
			//line 307 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double v2_v3squaredLength = ( ( (( x3 - x2 )) * (( x3 - x2 )) ) + ( (( y3 - y2 )) * (( y3 - y2 )) ) );
			//line 308 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double v3_v1squaredLength = ( ( (( x1 - x3 )) * (( x1 - x3 )) ) + ( (( y1 - y3 )) * (( y1 - y3 )) ) );
			//line 310 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double dot_v_v1v2 = ( ( (( x - x1 )) * (( x2 - x1 )) ) + ( (( y - y1 )) * (( y2 - y1 )) ) );
			//line 311 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double dot_v_v2v3 = ( ( (( x - x2 )) * (( x3 - x2 )) ) + ( (( y - y2 )) * (( y3 - y2 )) ) );
			//line 312 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double dot_v_v3v1 = ( ( (( x - x3 )) * (( x1 - x3 )) ) + ( (( y - y3 )) * (( y1 - y3 )) ) );
			//line 314 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double v_e1_2squaredLength = ( v_v1squaredLength - ( ( dot_v_v1v2 * dot_v_v1v2 ) / v1_v2squaredLength ) );
			//line 315 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double v_e2_3squaredLength = ( v_v2squaredLength - ( ( dot_v_v2v3 * dot_v_v2v3 ) / v2_v3squaredLength ) );
			//line 316 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double v_e3_1squaredLength = ( v_v3squaredLength - ( ( dot_v_v3v1 * dot_v_v3v1 ) / v3_v1squaredLength ) );
			//line 318 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			boolean closeTo_e1_2 = ( v_e1_2squaredLength <= 0.0001 );
			//line 319 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			boolean closeTo_e2_3 = ( v_e2_3squaredLength <= 0.0001 );
			//line 320 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			boolean closeTo_e3_1 = ( v_e3_1squaredLength <= 0.0001 );
			//line 322 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (closeTo_e1_2) 
			{
				//line 323 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				if (closeTo_e3_1) 
				{
					//line 324 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					result = hxDaedalus.data.math.Intersection.EVertex(v1);
				}
				else
				{
					//line 325 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					if (closeTo_e2_3) 
					{
						//line 326 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						result = hxDaedalus.data.math.Intersection.EVertex(v2);
					}
					else
					{
						//line 328 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						result = hxDaedalus.data.math.Intersection.EEdge(e1_2);
					}
					
				}
				
			}
			else
			{
				//line 330 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				if (closeTo_e2_3) 
				{
					//line 331 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					if (closeTo_e3_1) 
					{
						//line 332 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						result = hxDaedalus.data.math.Intersection.EVertex(v3);
					}
					else
					{
						//line 334 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						result = hxDaedalus.data.math.Intersection.EEdge(e2_3);
					}
					
				}
				else
				{
					//line 336 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					if (closeTo_e3_1) 
					{
						//line 337 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						result = hxDaedalus.data.math.Intersection.EEdge(e3_1);
					}
					else
					{
						//line 339 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						result = hxDaedalus.data.math.Intersection.EFace(polygon);
					}
					
				}
				
			}
			
		}
		
		//line 343 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		return result;
	}
	
	
	public static boolean clipSegmentByTriangle(double s1x, double s1y, double s2x, double s2y, double t1x, double t1y, double t2x, double t2y, double t3x, double t3y, hxDaedalus.data.math.Point2D pResult1, hxDaedalus.data.math.Point2D pResult2)
	{
		//line 357 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int side1_1 = 0;
		//line 358 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int side1_2 = 0;
		//line 359 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		side1_1 = hxDaedalus.data.math.Geom2D.getDirection(t1x, t1y, t2x, t2y, s1x, s1y);
		//line 360 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		side1_2 = hxDaedalus.data.math.Geom2D.getDirection(t1x, t1y, t2x, t2y, s2x, s2y);
		//line 362 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( ( side1_1 <= 0 ) && ( side1_2 <= 0 ) )) 
		{
			//line 363 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return false;
		}
		
		//line 365 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int side2_1 = 0;
		//line 366 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int side2_2 = 0;
		//line 367 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		side2_1 = hxDaedalus.data.math.Geom2D.getDirection(t2x, t2y, t3x, t3y, s1x, s1y);
		//line 368 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		side2_2 = hxDaedalus.data.math.Geom2D.getDirection(t2x, t2y, t3x, t3y, s2x, s2y);
		//line 370 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( ( side2_1 <= 0 ) && ( side2_2 <= 0 ) )) 
		{
			//line 371 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return false;
		}
		
		//line 373 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int side3_1 = 0;
		//line 374 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int side3_2 = 0;
		//line 375 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		side3_1 = hxDaedalus.data.math.Geom2D.getDirection(t3x, t3y, t1x, t1y, s1x, s1y);
		//line 376 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		side3_2 = hxDaedalus.data.math.Geom2D.getDirection(t3x, t3y, t1x, t1y, s2x, s2y);
		//line 378 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( ( side3_1 <= 0 ) && ( side3_2 <= 0 ) )) 
		{
			//line 379 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return false;
		}
		
		//line 383 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( ( ( ( side1_1 >= 0 ) && ( side2_1 >= 0 ) ) && ( side3_1 >= 0 ) ) && (( ( ( side1_2 >= 0 ) && ( side2_2 >= 0 ) ) && ( side3_2 >= 0 ) )) )) 
		{
			//line 385 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			pResult1.x = s1x;
			//line 386 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			pResult1.y = s1y;
			//line 387 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			pResult2.x = s2x;
			//line 388 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			pResult2.y = s2y;
			//line 389 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return true;
		}
		
		//line 392 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int n = 0;
		//line 394 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (hxDaedalus.data.math.Geom2D.intersections2segments(s1x, s1y, s2x, s2y, t1x, t1y, t2x, t2y, pResult1, null, null)) 
		{
			//line 396 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			 ++ n;
		}
		
		//line 401 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( n == 0 )) 
		{
			//line 404 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (hxDaedalus.data.math.Geom2D.intersections2segments(s1x, s1y, s2x, s2y, t2x, t2y, t3x, t3y, pResult1, null, null)) 
			{
				//line 406 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				 ++ n;
			}
			
		}
		else
		{
			//line 411 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (hxDaedalus.data.math.Geom2D.intersections2segments(s1x, s1y, s2x, s2y, t2x, t2y, t3x, t3y, pResult2, null, null)) 
			{
				//line 414 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				if (( ( ( ( -0.01 > ( pResult1.x - pResult2.x ) ) || ( ( pResult1.x - pResult2.x ) > 0.01 ) ) || ( -0.01 > ( pResult1.y - pResult2.y ) ) ) || ( ( pResult1.y - pResult2.y ) > 0.01 ) )) 
				{
					//line 416 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					 ++ n;
				}
				
			}
			
		}
		
		//line 423 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( n == 0 )) 
		{
			//line 425 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (hxDaedalus.data.math.Geom2D.intersections2segments(s1x, s1y, s2x, s2y, t3x, t3y, t1x, t1y, pResult1, null, null)) 
			{
				//line 427 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				 ++ n;
			}
			
		}
		else
		{
			//line 431 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (( n == 1 )) 
			{
				//line 433 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				if (hxDaedalus.data.math.Geom2D.intersections2segments(s1x, s1y, s2x, s2y, t3x, t3y, t1x, t1y, pResult2, null, null)) 
				{
					//line 435 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					if (( ( ( ( -0.01 > ( pResult1.x - pResult2.x ) ) || ( ( pResult1.x - pResult2.x ) > 0.01 ) ) || ( -0.01 > ( pResult1.y - pResult2.y ) ) ) || ( ( pResult1.y - pResult2.y ) > 0.01 ) )) 
					{
						//line 437 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						 ++ n;
					}
					
				}
				
			}
			
		}
		
		//line 444 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( n == 1 )) 
		{
			//line 446 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (( ( ( side1_1 >= 0 ) && ( side2_1 >= 0 ) ) && ( side3_1 >= 0 ) )) 
			{
				//line 448 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				pResult2.x = s1x;
				//line 449 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				pResult2.y = s1y;
			}
			else
			{
				//line 451 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				if (( ( ( side1_2 >= 0 ) && ( side2_2 >= 0 ) ) && ( side3_2 >= 0 ) )) 
				{
					//line 453 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					pResult2.x = s2x;
					//line 454 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					pResult2.y = s2y;
				}
				else
				{
					//line 459 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					n = 0;
				}
				
			}
			
		}
		
		//line 463 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( n > 0 )) 
		{
			//line 464 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return true;
		}
		else
		{
			//line 466 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return false;
		}
		
	}
	
	
	public static boolean isSegmentIntersectingTriangle(double s1x, double s1y, double s2x, double s2y, double t1x, double t1y, double t2x, double t2y, double t3x, double t3y)
	{
		//line 474 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int side1_1 = 0;
		//line 475 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int side1_2 = 0;
		//line 476 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		side1_1 = hxDaedalus.data.math.Geom2D.getDirection(t1x, t1y, t2x, t2y, s1x, s1y);
		//line 477 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		side1_2 = hxDaedalus.data.math.Geom2D.getDirection(t1x, t1y, t2x, t2y, s2x, s2y);
		//line 479 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( ( side1_1 <= 0 ) && ( side1_2 <= 0 ) )) 
		{
			//line 480 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return false;
		}
		
		//line 482 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int side2_1 = 0;
		//line 483 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int side2_2 = 0;
		//line 484 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		side2_1 = hxDaedalus.data.math.Geom2D.getDirection(t2x, t2y, t3x, t3y, s1x, s1y);
		//line 485 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		side2_2 = hxDaedalus.data.math.Geom2D.getDirection(t2x, t2y, t3x, t3y, s2x, s2y);
		//line 487 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( ( side2_1 <= 0 ) && ( side2_2 <= 0 ) )) 
		{
			//line 488 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return false;
		}
		
		//line 490 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int side3_1 = 0;
		//line 491 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int side3_2 = 0;
		//line 492 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		side3_1 = hxDaedalus.data.math.Geom2D.getDirection(t3x, t3y, t1x, t1y, s1x, s1y);
		//line 493 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		side3_2 = hxDaedalus.data.math.Geom2D.getDirection(t3x, t3y, t1x, t1y, s2x, s2y);
		//line 495 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( ( side3_1 <= 0 ) && ( side3_2 <= 0 ) )) 
		{
			//line 496 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return false;
		}
		
		//line 500 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( ( ( side1_1 == 1 ) && ( side2_1 == 1 ) ) && ( side3_1 == 1 ) )) 
		{
			//line 501 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return true;
		}
		
		//line 505 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( ( ( side1_1 == 1 ) && ( side2_1 == 1 ) ) && ( side3_1 == 1 ) )) 
		{
			//line 506 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return true;
		}
		
		//line 508 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int side1 = 0;
		//line 509 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int side2 = 0;
		//line 511 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( ( ( side1_1 == 1 ) && ( side1_2 <= 0 ) ) || ( ( side1_1 <= 0 ) && ( side1_2 == 1 ) ) )) 
		{
			//line 513 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			side1 = hxDaedalus.data.math.Geom2D.getDirection(s1x, s1y, s2x, s2y, t1x, t1y);
			//line 514 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			side2 = hxDaedalus.data.math.Geom2D.getDirection(s1x, s1y, s2x, s2y, t2x, t2y);
			//line 515 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (( ( ( side1 == 1 ) && ( side2 <= 0 ) ) || ( ( side1 <= 0 ) && ( side2 == 1 ) ) )) 
			{
				//line 517 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				return true;
			}
			
		}
		
		//line 521 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( ( ( side2_1 == 1 ) && ( side2_2 <= 0 ) ) || ( ( side2_1 <= 0 ) && ( side2_2 == 1 ) ) )) 
		{
			//line 523 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			side1 = hxDaedalus.data.math.Geom2D.getDirection(s1x, s1y, s2x, s2y, t2x, t2y);
			//line 524 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			side2 = hxDaedalus.data.math.Geom2D.getDirection(s1x, s1y, s2x, s2y, t3x, t3y);
			//line 525 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (( ( ( side1 == 1 ) && ( side2 <= 0 ) ) || ( ( side1 <= 0 ) && ( side2 == 1 ) ) )) 
			{
				//line 527 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				return true;
			}
			
		}
		
		//line 531 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( ( ( side3_1 == 1 ) && ( side3_2 <= 0 ) ) || ( ( side3_1 <= 0 ) && ( side3_2 == 1 ) ) )) 
		{
			//line 533 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			side1 = hxDaedalus.data.math.Geom2D.getDirection(s1x, s1y, s2x, s2y, t3x, t3y);
			//line 534 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			side2 = hxDaedalus.data.math.Geom2D.getDirection(s1x, s1y, s2x, s2y, t1x, t1y);
			//line 535 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (( ( ( side1 == 1 ) && ( side2 <= 0 ) ) || ( ( side1 <= 0 ) && ( side2 == 1 ) ) )) 
			{
				//line 537 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				return true;
			}
			
		}
		
		//line 541 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		return false;
	}
	
	
	public static hxDaedalus.data.math.Point2D __circumcenter;
	
	public static boolean isDelaunay(hxDaedalus.data.Edge edge)
	{
		//line 547 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.Vertex vLeft = edge.get_originVertex();
		//line 548 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.Vertex vRight = edge.get_destinationVertex();
		//line 549 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.Vertex vCorner = edge.get_nextLeftEdge().get_destinationVertex();
		//line 550 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.Vertex vOpposite = edge.get_nextRightEdge().get_destinationVertex();
		//line 601 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.math.Geom2D.getCircumcenter(vCorner.get_pos().x, vCorner.get_pos().y, vLeft.get_pos().x, vLeft.get_pos().y, vRight.get_pos().x, vRight.get_pos().y, hxDaedalus.data.math.Geom2D.__circumcenter);
		//line 604 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double squaredRadius = ( ( (( vCorner.get_pos().x - hxDaedalus.data.math.Geom2D.__circumcenter.x )) * (( vCorner.get_pos().x - hxDaedalus.data.math.Geom2D.__circumcenter.x )) ) + ( (( vCorner.get_pos().y - hxDaedalus.data.math.Geom2D.__circumcenter.y )) * (( vCorner.get_pos().y - hxDaedalus.data.math.Geom2D.__circumcenter.y )) ) );
		//line 605 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double squaredDistance = ( ( (( vOpposite.get_pos().x - hxDaedalus.data.math.Geom2D.__circumcenter.x )) * (( vOpposite.get_pos().x - hxDaedalus.data.math.Geom2D.__circumcenter.x )) ) + ( (( vOpposite.get_pos().y - hxDaedalus.data.math.Geom2D.__circumcenter.y )) * (( vOpposite.get_pos().y - hxDaedalus.data.math.Geom2D.__circumcenter.y )) ) );
		//line 607 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		return ( squaredDistance >= squaredRadius );
	}
	
	
	public static hxDaedalus.data.math.Point2D getCircumcenter(double x1, double y1, double x2, double y2, double x3, double y3, hxDaedalus.data.math.Point2D result)
	{
		//line 612 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( result == null )) 
		{
			//line 614 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			result = new hxDaedalus.data.math.Point2D(null, null);
		}
		
		//line 619 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double m1 = ( (( x1 + x2 )) / 2 );
		//line 620 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double m2 = ( (( y1 + y2 )) / 2 );
		//line 621 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double m3 = ( (( x1 + x3 )) / 2 );
		//line 622 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double m4 = ( (( y1 + y3 )) / 2 );
		//line 642 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double t1 = ( (( ( ( m1 * (( x1 - x3 )) ) + ( (( m2 - m4 )) * (( y1 - y3 )) ) ) + ( m3 * (( x3 - x1 )) ) )) / (( ( ( x1 * (( y3 - y2 )) ) + ( x2 * (( y1 - y3 )) ) ) + ( x3 * (( y2 - y1 )) ) )) );
		//line 644 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		result.x = ( m1 + ( t1 * (( y2 - y1 )) ) );
		//line 645 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		result.y = ( m2 - ( t1 * (( x2 - x1 )) ) );
		//line 647 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		return result;
	}
	
	
	public static boolean intersections2segments(double s1p1x, double s1p1y, double s1p2x, double s1p2y, double s2p1x, double s2p1y, double s2p2x, double s2p2y, hxDaedalus.data.math.Point2D posIntersection, haxe.root.Array<java.lang.Object> paramIntersection, java.lang.Object infiniteLineMode)
	{
		//line 651 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		boolean __temp_infiniteLineMode9 = ( (haxe.lang.Runtime.eq(infiniteLineMode, null)) ? (false) : (haxe.lang.Runtime.toBool(infiniteLineMode)) );
		//line 652 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double t1 = ((double) (0) );
		//line 653 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double t2 = ((double) (0) );
		//line 655 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		boolean result = false;
		//line 656 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double divisor = ( ( (( s1p1x - s1p2x )) * (( s2p1y - s2p2y )) ) + ( (( s1p2y - s1p1y )) * (( s2p1x - s2p2x )) ) );
		//line 657 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( divisor == 0 )) 
		{
			//line 659 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			result = false;
		}
		else
		{
			//line 663 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			result = true;
			//line 665 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (( (  ! (__temp_infiniteLineMode9)  || ( posIntersection != null ) ) || ( paramIntersection != null ) )) 
			{
				//line 668 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				t1 = ( (( ( ( ( s1p1x * (( s2p1y - s2p2y )) ) + ( s1p1y * (( s2p2x - s2p1x )) ) ) + ( s2p1x * s2p2y ) ) - ( s2p1y * s2p2x ) )) / divisor );
				//line 669 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				t2 = ( (( ( ( ( s1p1x * (( s2p1y - s1p2y )) ) + ( s1p1y * (( s1p2x - s2p1x )) ) ) - ( s1p2x * s2p1y ) ) + ( s1p2y * s2p1x ) )) / divisor );
				//line 670 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				if ((  ! (__temp_infiniteLineMode9)  &&  ! ((( ( ( ( 0 <= t1 ) && ( t1 <= 1 ) ) && ( 0 <= t2 ) ) && ( t2 <= 1 ) )))  )) 
				{
					//line 671 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					result = false;
				}
				
			}
			
		}
		
		//line 675 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (result) 
		{
			//line 677 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (( posIntersection != null )) 
			{
				//line 679 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				posIntersection.x = ( s1p1x + ( t1 * (( s1p2x - s1p1x )) ) );
				//line 680 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				posIntersection.y = ( s1p1y + ( t1 * (( s1p2y - s1p1y )) ) );
			}
			
			//line 682 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (( paramIntersection != null )) 
			{
				//line 684 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				paramIntersection.push(t1);
				//line 685 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				paramIntersection.push(t2);
			}
			
		}
		
		//line 689 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		return result;
	}
	
	
	public static boolean intersections2edges(hxDaedalus.data.Edge edge1, hxDaedalus.data.Edge edge2, hxDaedalus.data.math.Point2D posIntersection, haxe.root.Array<java.lang.Object> paramIntersection, java.lang.Object infiniteLineMode)
	{
		//line 694 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		boolean __temp_infiniteLineMode10 = ( (haxe.lang.Runtime.eq(infiniteLineMode, null)) ? (false) : (haxe.lang.Runtime.toBool(infiniteLineMode)) );
		//line 694 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		return hxDaedalus.data.math.Geom2D.intersections2segments(edge1.get_originVertex().get_pos().x, edge1.get_originVertex().get_pos().y, edge1.get_destinationVertex().get_pos().x, edge1.get_destinationVertex().get_pos().y, edge2.get_originVertex().get_pos().x, edge2.get_originVertex().get_pos().y, edge2.get_destinationVertex().get_pos().x, edge2.get_destinationVertex().get_pos().y, posIntersection, paramIntersection, __temp_infiniteLineMode10);
	}
	
	
	public static boolean isConvex(hxDaedalus.data.Edge edge)
	{
		//line 700 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		boolean result = true;
		//line 702 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.Edge eLeft = null;
		//line 703 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		hxDaedalus.data.Vertex vRight = null;
		//line 705 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		eLeft = edge.get_nextLeftEdge().get_oppositeEdge();
		//line 706 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		vRight = edge.get_nextRightEdge().get_destinationVertex();
		//line 707 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( hxDaedalus.data.math.Geom2D.getRelativePosition(vRight.get_pos().x, vRight.get_pos().y, eLeft) != -1 )) 
		{
			//line 709 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			result = false;
		}
		else
		{
			//line 713 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			eLeft = edge.get_prevRightEdge();
			//line 714 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			vRight = edge.get_prevLeftEdge().get_originVertex();
			//line 715 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (( hxDaedalus.data.math.Geom2D.getRelativePosition(vRight.get_pos().x, vRight.get_pos().y, eLeft) != -1 )) 
			{
				//line 717 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				result = false;
			}
			
		}
		
		//line 721 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		return result;
	}
	
	
	public static void projectOrthogonaly(hxDaedalus.data.math.Point2D vertexPos, hxDaedalus.data.Edge edge)
	{
		//line 739 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double a = edge.get_originVertex().get_pos().x;
		//line 740 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double b = edge.get_originVertex().get_pos().y;
		//line 741 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double c = edge.get_destinationVertex().get_pos().x;
		//line 742 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double d = edge.get_destinationVertex().get_pos().y;
		//line 743 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double e = vertexPos.x;
		//line 744 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double f = vertexPos.y;
		//line 751 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double t1 = ( (( ( ( ( ( ( ( ( a * a ) - ( a * c ) ) - ( a * e ) ) + ( b * b ) ) - ( b * d ) ) - ( b * f ) ) + ( c * e ) ) + ( d * f ) )) / (( ( ( ( ( ( a * a ) - ( ( 2 * a ) * c ) ) + ( b * b ) ) - ( ( 2 * b ) * d ) ) + ( c * c ) ) + ( d * d ) )) );
		//line 754 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		vertexPos.x = ( a + ( t1 * (( c - a )) ) );
		//line 755 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		vertexPos.y = ( b + ( t1 * (( d - b )) ) );
	}
	
	
	public static boolean intersections2Circles(double cx1, double cy1, double r1, double cx2, double cy2, double r2, haxe.root.Array<java.lang.Object> result)
	{
		//line 763 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double distRadiusSQRD = ( ( (( cx2 - cx1 )) * (( cx2 - cx1 )) ) + ( (( cy2 - cy1 )) * (( cy2 - cy1 )) ) );
		//line 765 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( ( (( ( cx1 != cx2 ) || ( cy1 != cy2 ) )) && ( distRadiusSQRD <= ( (( r1 + r2 )) * (( r1 + r2 )) ) ) ) && ( distRadiusSQRD >= ( (( r1 - r2 )) * (( r1 - r2 )) ) ) )) 
		{
			//line 769 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double transcendPart = java.lang.Math.sqrt(( (( ( (( r1 + r2 )) * (( r1 + r2 )) ) - distRadiusSQRD )) * (( distRadiusSQRD - ( (( r2 - r1 )) * (( r2 - r1 )) ) )) ));
			//line 771 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double xFirstPart = ( ( (( cx1 + cx2 )) / 2 ) + ( ( (( cx2 - cx1 )) * (( ( r1 * r1 ) - ( r2 * r2 ) )) ) / (( 2 * distRadiusSQRD )) ) );
			//line 772 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double yFirstPart = ( ( (( cy1 + cy2 )) / 2 ) + ( ( (( cy2 - cy1 )) * (( ( r1 * r1 ) - ( r2 * r2 ) )) ) / (( 2 * distRadiusSQRD )) ) );
			//line 773 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double xFactor = ( (( cy2 - cy1 )) / (( 2 * distRadiusSQRD )) );
			//line 774 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double yFactor = ( (( cx2 - cx1 )) / (( 2 * distRadiusSQRD )) );
			//line 776 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (( result != null )) 
			{
				//line 778 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				int _g = 0;
				//line 778 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				haxe.root.Array<java.lang.Object> _g1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (( xFirstPart + ( xFactor * transcendPart ) )) ), ((java.lang.Object) (( yFirstPart - ( yFactor * transcendPart ) )) ), ((java.lang.Object) (( xFirstPart - ( xFactor * transcendPart ) )) ), ((java.lang.Object) (( yFirstPart + ( yFactor * transcendPart ) )) )});
				//line 778 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				while (( _g < _g1.length ))
				{
					//line 778 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					double f = ((double) (haxe.lang.Runtime.toDouble(_g1.__get(_g))) );
					//line 778 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					 ++ _g;
					//line 779 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					result.push(f);
				}
				
			}
			
			//line 782 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return true;
		}
		else
		{
			//line 785 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return false;
		}
		
	}
	
	
	public static boolean intersectionsSegmentCircle(double p0x, double p0y, double p1x, double p1y, double cx, double cy, double r, haxe.root.Array<java.lang.Object> result)
	{
		//line 791 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double p0xSQD = ( p0x * p0x );
		//line 792 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double p0ySQD = ( p0y * p0y );
		//line 793 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double a = ( ( ( ( ( ( p1y * p1y ) - ( ( 2 * p1y ) * p0y ) ) + p0ySQD ) + ( p1x * p1x ) ) - ( ( 2 * p1x ) * p0x ) ) + p0xSQD );
		//line 794 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double b = ( ( ( ( ( ( ( ( ( 2 * p0y ) * cy ) - ( 2 * p0xSQD ) ) + ( ( 2 * p1y ) * p0y ) ) - ( 2 * p0ySQD ) ) + ( ( 2 * p1x ) * p0x ) ) - ( ( 2 * p1x ) * cx ) ) + ( ( 2 * p0x ) * cx ) ) - ( ( 2 * p1y ) * cy ) );
		//line 795 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double c = ( ( ( ( ( ( p0ySQD + ( cy * cy ) ) + ( cx * cx ) ) - ( ( 2 * p0y ) * cy ) ) - ( ( 2 * p0x ) * cx ) ) + p0xSQD ) - ( r * r ) );
		//line 796 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double delta = ( ( b * b ) - ( ( 4 * a ) * c ) );
		//line 797 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double deltaSQRT = 0.0;
		//line 799 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double t0 = 0.0;
		//line 800 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double t1 = 0.0;
		//line 801 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( delta < 0 )) 
		{
			//line 804 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return false;
		}
		else
		{
			//line 806 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (( delta == 0 )) 
			{
				//line 809 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				t0 = (  - (b)  / (( 2 * a )) );
				//line 810 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				if (( ( t0 < 0 ) || ( t0 > 1 ) )) 
				{
					//line 811 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					return false;
				}
				
				//line 815 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				if (( result != null )) 
				{
					//line 816 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					int _g = 0;
					//line 816 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					haxe.root.Array<java.lang.Object> _g1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (( p0x + ( t0 * (( p1x - p0x )) ) )) ), ((java.lang.Object) (( p0y + ( t0 * (( p1y - p0y )) ) )) ), ((java.lang.Object) (t0) )});
					//line 816 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					while (( _g < _g1.length ))
					{
						//line 816 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						double f = ((double) (haxe.lang.Runtime.toDouble(_g1.__get(_g))) );
						//line 816 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						 ++ _g;
						//line 817 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						result.push(f);
					}
					
				}
				
				//line 819 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				return true;
			}
			else
			{
				//line 824 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				deltaSQRT = java.lang.Math.sqrt(delta);
				//line 825 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				t0 = ( ((  - (b)  + deltaSQRT )) / (( 2 * a )) );
				//line 826 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				t1 = ( ((  - (b)  - deltaSQRT )) / (( 2 * a )) );
				//line 830 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				boolean intersecting = false;
				//line 831 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				if (( ( 0 <= t0 ) && ( t0 <= 1 ) )) 
				{
					//line 833 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					if (( result != null )) 
					{
						//line 834 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						int _g2 = 0;
						//line 834 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						haxe.root.Array<java.lang.Object> _g11 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (( p0x + ( t0 * (( p1x - p0x )) ) )) ), ((java.lang.Object) (( p0y + ( t0 * (( p1y - p0y )) ) )) ), ((java.lang.Object) (t0) )});
						//line 834 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						while (( _g2 < _g11.length ))
						{
							//line 834 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
							double f1 = ((double) (haxe.lang.Runtime.toDouble(_g11.__get(_g2))) );
							//line 834 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
							 ++ _g2;
							//line 835 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
							result.push(f1);
						}
						
					}
					
					//line 836 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					intersecting = true;
				}
				
				//line 838 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				if (( ( 0 <= t1 ) && ( t1 <= 1 ) )) 
				{
					//line 840 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					if (( result != null )) 
					{
						//line 841 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						int _g3 = 0;
						//line 841 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						haxe.root.Array<java.lang.Object> _g12 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (( p0x + ( t1 * (( p1x - p0x )) ) )) ), ((java.lang.Object) (( p0y + ( t1 * (( p1y - p0y )) ) )) ), ((java.lang.Object) (t1) )});
						//line 841 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						while (( _g3 < _g12.length ))
						{
							//line 841 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
							double f2 = ((double) (haxe.lang.Runtime.toDouble(_g12.__get(_g3))) );
							//line 841 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
							 ++ _g3;
							//line 842 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
							result.push(f2);
						}
						
					}
					
					//line 843 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					intersecting = true;
				}
				
				//line 846 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				return intersecting;
			}
			
		}
		
	}
	
	
	public static boolean intersectionsLineCircle(double p0x, double p0y, double p1x, double p1y, double cx, double cy, double r, haxe.root.Array<java.lang.Object> result)
	{
		//line 852 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double p0xSQD = ( p0x * p0x );
		//line 853 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double p0ySQD = ( p0y * p0y );
		//line 854 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double a = ( ( ( ( ( ( p1y * p1y ) - ( ( 2 * p1y ) * p0y ) ) + p0ySQD ) + ( p1x * p1x ) ) - ( ( 2 * p1x ) * p0x ) ) + p0xSQD );
		//line 855 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double b = ( ( ( ( ( ( ( ( ( 2 * p0y ) * cy ) - ( 2 * p0xSQD ) ) + ( ( 2 * p1y ) * p0y ) ) - ( 2 * p0ySQD ) ) + ( ( 2 * p1x ) * p0x ) ) - ( ( 2 * p1x ) * cx ) ) + ( ( 2 * p0x ) * cx ) ) - ( ( 2 * p1y ) * cy ) );
		//line 856 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double c = ( ( ( ( ( ( p0ySQD + ( cy * cy ) ) + ( cx * cx ) ) - ( ( 2 * p0y ) * cy ) ) - ( ( 2 * p0x ) * cx ) ) + p0xSQD ) - ( r * r ) );
		//line 857 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double delta = ( ( b * b ) - ( ( 4 * a ) * c ) );
		//line 858 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double deltaSQRT = 0.0;
		//line 860 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double t0 = 0.0;
		//line 861 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double t1 = 0.0;
		//line 862 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( delta < 0 )) 
		{
			//line 865 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return false;
		}
		else
		{
			//line 867 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (( delta == 0 )) 
			{
				//line 870 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				t0 = (  - (b)  / (( 2 * a )) );
				//line 873 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				{
					//line 873 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					int _g = 0;
					//line 873 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					haxe.root.Array<java.lang.Object> _g1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (( p0x + ( t0 * (( p1x - p0x )) ) )) ), ((java.lang.Object) (( p0y + ( t0 * (( p1y - p0y )) ) )) ), ((java.lang.Object) (t0) )});
					//line 873 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					while (( _g < _g1.length ))
					{
						//line 873 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						double f = ((double) (haxe.lang.Runtime.toDouble(_g1.__get(_g))) );
						//line 873 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						 ++ _g;
						//line 874 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						result.push(f);
					}
					
				}
				
			}
			else
			{
				//line 876 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				if (( delta > 0 )) 
				{
					//line 878 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					deltaSQRT = java.lang.Math.sqrt(delta);
					//line 879 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					t0 = ( ((  - (b)  + deltaSQRT )) / (( 2 * a )) );
					//line 880 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					t1 = ( ((  - (b)  - deltaSQRT )) / (( 2 * a )) );
					//line 884 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					{
						//line 884 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						int _g2 = 0;
						//line 884 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						haxe.root.Array<java.lang.Object> _g11 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (( p0x + ( t0 * (( p1x - p0x )) ) )) ), ((java.lang.Object) (( p0y + ( t0 * (( p1y - p0y )) ) )) ), ((java.lang.Object) (t0) ), ((java.lang.Object) (( p0x + ( t1 * (( p1x - p0x )) ) )) ), ((java.lang.Object) (( p0y + ( t1 * (( p1y - p0y )) ) )) ), ((java.lang.Object) (t1) )});
						//line 884 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
						while (( _g2 < _g11.length ))
						{
							//line 884 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
							double f1 = ((double) (haxe.lang.Runtime.toDouble(_g11.__get(_g2))) );
							//line 884 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
							 ++ _g2;
							//line 885 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
							result.push(f1);
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 888 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		return true;
	}
	
	
	public static boolean tangentsPointToCircle(double px, double py, double cx, double cy, double r, haxe.root.Array<java.lang.Object> result)
	{
		//line 897 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double c2x = ( (( px + cx )) / 2 );
		//line 898 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double c2y = ( (( py + cy )) / 2 );
		//line 899 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double r2 = ( 0.5 * java.lang.Math.sqrt(( ( (( px - cx )) * (( px - cx )) ) + ( (( py - cy )) * (( py - cy )) ) )) );
		//line 901 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		return hxDaedalus.data.math.Geom2D.intersections2Circles(c2x, c2y, r2, cx, cy, r, result);
	}
	
	
	public static boolean tangentsCrossCircleToCircle(double r, double c1x, double c1y, double c2x, double c2y, haxe.root.Array<java.lang.Object> result)
	{
		//line 907 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double distance = java.lang.Math.sqrt(( ( (( c1x - c2x )) * (( c1x - c2x )) ) + ( (( c1y - c2y )) * (( c1y - c2y )) ) ));
		//line 910 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double radius = ( distance / 4 );
		//line 911 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double centerX = ( c1x + ( (( c2x - c1x )) / 4 ) );
		//line 912 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double centerY = ( c1y + ( (( c2y - c1y )) / 4 ) );
		//line 914 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (hxDaedalus.data.math.Geom2D.intersections2Circles(c1x, c1y, r, centerX, centerY, radius, result)) 
		{
			//line 916 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double t1x = ((double) (haxe.lang.Runtime.toDouble(result.__get(0))) );
			//line 917 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double t1y = ((double) (haxe.lang.Runtime.toDouble(result.__get(1))) );
			//line 918 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double t2x = ((double) (haxe.lang.Runtime.toDouble(result.__get(2))) );
			//line 919 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double t2y = ((double) (haxe.lang.Runtime.toDouble(result.__get(3))) );
			//line 921 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double midX = ( (( c1x + c2x )) / 2 );
			//line 922 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double midY = ( (( c1y + c2y )) / 2 );
			//line 923 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double dotProd = ( ( (( t1x - midX )) * (( c2y - c1y )) ) + ( (( t1y - midY )) * ((  - (c2x)  + c1x )) ) );
			//line 924 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double tproj = ( dotProd / (( distance * distance )) );
			//line 925 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double projx = ( midX + ( tproj * (( c2y - c1y )) ) );
			//line 926 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double projy = ( midY - ( tproj * (( c2x - c1x )) ) );
			//line 929 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double t4x = ( ( 2 * projx ) - t1x );
			//line 930 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double t4y = ( ( 2 * projy ) - t1y );
			//line 932 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double t3x = ( ( t4x + t2x ) - t1x );
			//line 933 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			double t3y = ( ( t2y + t4y ) - t1y );
			//line 935 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			{
				//line 935 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				int _g = 0;
				//line 935 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				haxe.root.Array<java.lang.Object> _g1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (t3x) ), ((java.lang.Object) (t3y) ), ((java.lang.Object) (t4x) ), ((java.lang.Object) (t4y) )});
				//line 935 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				while (( _g < _g1.length ))
				{
					//line 935 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					double f = ((double) (haxe.lang.Runtime.toDouble(_g1.__get(_g))) );
					//line 935 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					 ++ _g;
					//line 935 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
					result.push(f);
				}
				
			}
			
			//line 937 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return true;
		}
		else
		{
			//line 942 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return false;
		}
		
	}
	
	
	public static void tangentsParalCircleToCircle(double r, double c1x, double c1y, double c2x, double c2y, haxe.root.Array<java.lang.Object> result)
	{
		//line 949 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double distance = java.lang.Math.sqrt(( ( (( c1x - c2x )) * (( c1x - c2x )) ) + ( (( c1y - c2y )) * (( c1y - c2y )) ) ));
		//line 950 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double t1x = ( c1x + ( ( r * (( c2y - c1y )) ) / distance ) );
		//line 951 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double t1y = ( c1y + ( ( r * ((  - (c2x)  + c1x )) ) / distance ) );
		//line 952 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double t2x = ( ( 2 * c1x ) - t1x );
		//line 953 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double t2y = ( ( 2 * c1y ) - t1y );
		//line 954 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double t3x = ( ( t2x + c2x ) - c1x );
		//line 955 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double t3y = ( ( t2y + c2y ) - c1y );
		//line 956 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double t4x = ( ( t1x + c2x ) - c1x );
		//line 957 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double t4y = ( ( t1y + c2y ) - c1y );
		//line 958 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		{
			//line 958 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			int _g = 0;
			//line 958 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			haxe.root.Array<java.lang.Object> _g1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (t1x) ), ((java.lang.Object) (t1y) ), ((java.lang.Object) (t2x) ), ((java.lang.Object) (t2y) ), ((java.lang.Object) (t3x) ), ((java.lang.Object) (t3y) ), ((java.lang.Object) (t4x) ), ((java.lang.Object) (t4y) )});
			//line 958 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			while (( _g < _g1.length ))
			{
				//line 958 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				double f = ((double) (haxe.lang.Runtime.toDouble(_g1.__get(_g))) );
				//line 958 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				 ++ _g;
				//line 959 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				result.push(f);
			}
			
		}
		
	}
	
	
	public static double distanceSquaredPointToLine(double px, double py, double ax, double ay, double bx, double by)
	{
		//line 965 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double a_b_squaredLength = ( ( (( bx - ax )) * (( bx - ax )) ) + ( (( by - ay )) * (( by - ay )) ) );
		//line 966 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double dotProduct = ( ( (( px - ax )) * (( bx - ax )) ) + ( (( py - ay )) * (( by - ay )) ) );
		//line 967 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double p_a_squaredLength = ( ( (( ax - px )) * (( ax - px )) ) + ( (( ay - py )) * (( ay - py )) ) );
		//line 968 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		return ( p_a_squaredLength - ( ( dotProduct * dotProduct ) / a_b_squaredLength ) );
	}
	
	
	public static double distanceSquaredPointToSegment(double px, double py, double ax, double ay, double bx, double by)
	{
		//line 974 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double a_b_squaredLength = ( ( (( bx - ax )) * (( bx - ax )) ) + ( (( by - ay )) * (( by - ay )) ) );
		//line 975 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double dotProduct = ( (( ( (( px - ax )) * (( bx - ax )) ) + ( (( py - ay )) * (( by - ay )) ) )) / a_b_squaredLength );
		//line 976 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		if (( dotProduct < 0 )) 
		{
			//line 978 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			return ( ( (( px - ax )) * (( px - ax )) ) + ( (( py - ay )) * (( py - ay )) ) );
		}
		else
		{
			//line 980 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			if (( dotProduct <= 1 )) 
			{
				//line 982 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				double p_a_squaredLength = ( ( (( ax - px )) * (( ax - px )) ) + ( (( ay - py )) * (( ay - py )) ) );
				//line 983 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				return ( p_a_squaredLength - ( ( dotProduct * dotProduct ) * a_b_squaredLength ) );
			}
			else
			{
				//line 987 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
				return ( ( (( px - bx )) * (( px - bx )) ) + ( (( py - by )) * (( py - by )) ) );
			}
			
		}
		
	}
	
	
	public static double distanceSquaredVertexToEdge(hxDaedalus.data.Vertex vertex, hxDaedalus.data.Edge edge)
	{
		//line 993 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		return hxDaedalus.data.math.Geom2D.distanceSquaredPointToSegment(vertex.get_pos().x, vertex.get_pos().y, edge.get_originVertex().get_pos().x, edge.get_originVertex().get_pos().y, edge.get_destinationVertex().get_pos().x, edge.get_destinationVertex().get_pos().y);
	}
	
	
	public static double pathLength(haxe.root.Array<java.lang.Object> path)
	{
		//line 997 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double sumDistance = 0.;
		//line 998 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double fromX = ((double) (haxe.lang.Runtime.toDouble(path.__get(0))) );
		//line 999 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double fromY = ((double) (haxe.lang.Runtime.toDouble(path.__get(1))) );
		//line 1000 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double nextX = 0.0;
		//line 1001 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double nextY = 0.0;
		//line 1002 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double x = 0.0;
		//line 1003 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double y = 0.0;
		//line 1004 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		double distance = 0.0;
		//line 1005 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		int i = 2;
		//line 1006 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		while (( i < path.length ))
		{
			//line 1007 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			nextX = ((double) (haxe.lang.Runtime.toDouble(path.__get(i))) );
			//line 1008 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			nextY = ((double) (haxe.lang.Runtime.toDouble(path.__get(( i + 1 )))) );
			//line 1009 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			x = ( nextX - fromX );
			//line 1010 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			y = ( nextY - fromY );
			//line 1011 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			distance = java.lang.Math.sqrt(( ( x * x ) + ( y * y ) ));
			//line 1012 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			sumDistance += distance;
			//line 1013 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			fromX = nextX;
			//line 1014 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			fromY = nextY;
			//line 1015 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
			i += 2;
		}
		
		//line 1018 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/data/math/Geom2D.hx"
		return sumDistance;
	}
	
	
}


