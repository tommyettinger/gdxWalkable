// Generated by Haxe 3.4.2
package hxDaedalus.data.math;

public class ShapeSimplifier extends haxe.lang.HxObject
{
	public ShapeSimplifier(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public ShapeSimplifier()
	{
		hxDaedalus.data.math.ShapeSimplifier.__hx_ctor_hxDaedalus_data_math_ShapeSimplifier(this);
	}
	
	
	public static void __hx_ctor_hxDaedalus_data_math_ShapeSimplifier(hxDaedalus.data.math.ShapeSimplifier __hx_this)
	{
	}
	
	
	public static haxe.root.Array<java.lang.Object> simplify(haxe.root.Array<java.lang.Object> coords, java.lang.Object epsilon)
	{
		double __temp_epsilon20 = ( (haxe.lang.Runtime.eq(epsilon, null)) ? (((double) (1) )) : haxe.lang.Runtime.toDouble(epsilon));
		int len = coords.length;
		if (( ( len <= 4 ) || ( __temp_epsilon20 < 1 ) )) 
		{
			return ((haxe.root.Array<java.lang.Object>) new haxe.root.Array<Object>(new Object[]{}).concat(((haxe.root.Array<Object>) coords)));
		}
		
		double firstPointX = haxe.lang.Runtime.toDouble(coords.__get(0));
		double firstPointY = haxe.lang.Runtime.toDouble(coords.__get(1));
		double lastPointX = haxe.lang.Runtime.toDouble(coords.__get(( len - 2 )));
		double lastPointY = haxe.lang.Runtime.toDouble(coords.__get(( len - 1 )));
		int index = -1;
		double dist = 0.;
		{
			int _g1 = 1;
			int _g = ( len >> 1 );
			while (( _g1 < _g ))
			{
				int i = _g1++;
				double currDist = hxDaedalus.data.math.Geom2D.distanceSquaredPointToSegment(haxe.lang.Runtime.toDouble(coords.__get(( i << 1 ))), haxe.lang.Runtime.toDouble(coords.__get(( (( i << 1 )) + 1 ))), firstPointX, firstPointY, lastPointX, lastPointY);
				if (( currDist > dist )) 
				{
					dist = currDist;
					index = i;
				}
				
			}
			
		}
		
		if (( dist > ( __temp_epsilon20 * __temp_epsilon20 ) )) 
		{
			haxe.root.Array<java.lang.Object> l1 = ((haxe.root.Array<java.lang.Object>) coords.slice(0, ( (( index << 1 )) + 2 )));
			haxe.root.Array<java.lang.Object> l2 = ((haxe.root.Array<java.lang.Object>) coords.slice(( index << 1 ), null));
			haxe.root.Array<java.lang.Object> r1 = hxDaedalus.data.math.ShapeSimplifier.simplify(l1, __temp_epsilon20);
			haxe.root.Array<java.lang.Object> r2 = hxDaedalus.data.math.ShapeSimplifier.simplify(l2, __temp_epsilon20);
			return ((haxe.root.Array<Object>) ((haxe.root.Array<Object>) r1.slice(0, ( r1.length - 2 ))).concat(((haxe.root.Array<Object>) r2)));
		}
		else
		{
			return new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{firstPointX, firstPointY, lastPointX, lastPointY});
		}
		
	}
	
	
}


