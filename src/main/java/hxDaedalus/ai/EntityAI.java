// Generated by Haxe 3.4.2
package hxDaedalus.ai;

import hxDaedalus.data.Obstacle;

@SuppressWarnings(value = {"rawtypes"})
public class EntityAI extends haxe.lang.HxObject {

  static {
    hxDaedalus.ai.EntityAI.NUM_SEGMENTS = 6;
  }

  public EntityAI(haxe.lang.EmptyObject empty) {
  }

  public EntityAI() {
    hxDaedalus.ai.EntityAI.__hx_ctor_hxDaedalus_ai_EntityAI(this);
  }

  public static void __hx_ctor_hxDaedalus_ai_EntityAI(hxDaedalus.ai.EntityAI __hx_this) {
    __hx_this._radius = 10;
    __hx_this.x = __hx_this.y = 0;
    __hx_this.dirNormX = 1;
    __hx_this.dirNormY = 0;
  }

  public static int NUM_SEGMENTS;

  public double dirNormY;

  public double dirNormX;

  public double y;

  public double x;

  public double _radius;

  public double _radiusSquared;

  public double _x;

  public double _y;

  public double _dirNormX;

  public double _dirNormY;

  public Obstacle _approximateObject;

  public void buildApproximation() {
    this._approximateObject = new Obstacle();
    this._approximateObject.get_matrix().translate(this.x, this.y);
    haxe.root.Array<java.lang.Object> coordinates = new haxe.root.Array<java.lang.Object>();
    this._approximateObject.set_coordinates(coordinates);
    if ((this._radius == 0)) {
      return;
    }

    {
      int _g = 0;
      while ((_g < 6)) {
        int i = _g++;
        coordinates.push((this._radius * java.lang.Math.cos((((2 * java.lang.Math.PI) * i) / 6))));
        coordinates.push((this._radius * java.lang.Math.sin((((2 * java.lang.Math.PI) * i) / 6))));
        coordinates.push((this._radius * java.lang.Math.cos((((2 * java.lang.Math.PI) * ((i + 1))) / 6))));
        coordinates.push((this._radius * java.lang.Math.sin((((2 * java.lang.Math.PI) * ((i + 1))) / 6))));
      }

    }

  }

  public Obstacle get_approximateObject() {
    this._approximateObject.get_matrix().identity();
    this._approximateObject.get_matrix().translate(this.x, this.y);
    return this._approximateObject;
  }

  public double get_radius() {
    return this._radius;
  }

  public double get_radiusSquared() {
    return this._radiusSquared;
  }

  public double set_radius(double value) {
    this._radius = value;
    this._radiusSquared = (this._radius * this._radius);
    return value;
  }

  @Override
  public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties) {
    {
      boolean __temp_executeDef1 = true;
      switch (field.hashCode()) {
        case 315675887: {
          if (field.equals("_dirNormY")) {
            this._dirNormY = value;
            return value;
          }

          break;
        }

        case 225158032: {
          if (field.equals("dirNormY")) {
            this.dirNormY = value;
            return value;
          }

          break;
        }

        case 315675886: {
          if (field.equals("_dirNormX")) {
            this._dirNormX = value;
            return value;
          }

          break;
        }

        case 225158031: {
          if (field.equals("dirNormX")) {
            this.dirNormX = value;
            return value;
          }

          break;
        }

        case 3066: {
          if (field.equals("_y")) {
            this._y = value;
            return value;
          }

          break;
        }

        case 121: {
          if (field.equals("y")) {
            this.y = value;
            return value;
          }

          break;
        }

        case 3065: {
          if (field.equals("_x")) {
            this._x = value;
            return value;
          }

          break;
        }

        case 120: {
          if (field.equals("x")) {
            this.x = value;
            return value;
          }

          break;
        }

        case -1460609034: {
          if (field.equals("_radiusSquared")) {
            this._radiusSquared = value;
            return value;
          }

          break;
        }

        case -938578798: {
          if (field.equals("radius")) {
            this.set_radius(value);
            return value;
          }

          break;
        }

        case 1769892273: {
          if (field.equals("_radius")) {
            this._radius = value;
            return value;
          }

          break;
        }

      }

      if (__temp_executeDef1) {
        return super.__hx_setField_f(field, value, handleProperties);
      } else {
        throw null;
      }

    }

  }

  @Override
  public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties) {
    {
      boolean __temp_executeDef1 = true;
      switch (field.hashCode()) {
        case -580090636: {
          if (field.equals("_approximateObject")) {
            this._approximateObject = ((Obstacle) (value));
            return value;
          }

          break;
        }

        case 225158032: {
          if (field.equals("dirNormY")) {
            this.dirNormY = haxe.lang.Runtime.toDouble(value);
            return value;
          }

          break;
        }

        case 315675887: {
          if (field.equals("_dirNormY")) {
            this._dirNormY = haxe.lang.Runtime.toDouble(value);
            return value;
          }

          break;
        }

        case 225158031: {
          if (field.equals("dirNormX")) {
            this.dirNormX = haxe.lang.Runtime.toDouble(value);
            return value;
          }

          break;
        }

        case 315675886: {
          if (field.equals("_dirNormX")) {
            this._dirNormX = haxe.lang.Runtime.toDouble(value);
            return value;
          }

          break;
        }

        case 121: {
          if (field.equals("y")) {
            this.y = haxe.lang.Runtime.toDouble(value);
            return value;
          }

          break;
        }

        case 3066: {
          if (field.equals("_y")) {
            this._y = haxe.lang.Runtime.toDouble(value);
            return value;
          }

          break;
        }

        case 120: {
          if (field.equals("x")) {
            this.x = haxe.lang.Runtime.toDouble(value);
            return value;
          }

          break;
        }

        case 3065: {
          if (field.equals("_x")) {
            this._x = haxe.lang.Runtime.toDouble(value);
            return value;
          }

          break;
        }

        case -938578798: {
          if (field.equals("radius")) {
            this.set_radius(haxe.lang.Runtime.toDouble(value));
            return value;
          }

          break;
        }

        case -1460609034: {
          if (field.equals("_radiusSquared")) {
            this._radiusSquared = haxe.lang.Runtime.toDouble(value);
            return value;
          }

          break;
        }

        case 1769892273: {
          if (field.equals("_radius")) {
            this._radius = haxe.lang.Runtime.toDouble(value);
            return value;
          }

          break;
        }

      }

      if (__temp_executeDef1) {
        return super.__hx_setField(field, value, handleProperties);
      } else {
        throw null;
      }

    }

  }

  @Override
  public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties) {
    {
      boolean __temp_executeDef1 = true;
      switch (field.hashCode()) {
        case -1216062705: {
          if (field.equals("set_radius")) {
            return new haxe.lang.Closure(this, "set_radius");
          }

          break;
        }

        case -347497613: {
          if (field.equals("approximateObject")) {
            return this.get_approximateObject();
          }

          break;
        }

        case -750657332: {
          if (field.equals("get_radiusSquared")) {
            return new haxe.lang.Closure(this, "get_radiusSquared");
          }

          break;
        }

        case 225158032: {
          if (field.equals("dirNormY")) {
            return this.dirNormY;
          }

          break;
        }

        case 1142099355: {
          if (field.equals("get_radius")) {
            return new haxe.lang.Closure(this, "get_radius");
          }

          break;
        }

        case 225158031: {
          if (field.equals("dirNormX")) {
            return this.dirNormX;
          }

          break;
        }

        case -2096813366: {
          if (field.equals("get_approximateObject")) {
            return new haxe.lang.Closure(this, "get_approximateObject");
          }

          break;
        }

        case 121: {
          if (field.equals("y")) {
            return this.y;
          }

          break;
        }

        case 209133353: {
          if (field.equals("buildApproximation")) {
            return new haxe.lang.Closure(this, "buildApproximation");
          }

          break;
        }

        case 120: {
          if (field.equals("x")) {
            return this.x;
          }

          break;
        }

        case -580090636: {
          if (field.equals("_approximateObject")) {
            return this._approximateObject;
          }

          break;
        }

        case -938578798: {
          if (field.equals("radius")) {
            return this.get_radius();
          }

          break;
        }

        case 315675887: {
          if (field.equals("_dirNormY")) {
            return this._dirNormY;
          }

          break;
        }

        case -677179915: {
          if (field.equals("radiusSquared")) {
            return this.get_radiusSquared();
          }

          break;
        }

        case 315675886: {
          if (field.equals("_dirNormX")) {
            return this._dirNormX;
          }

          break;
        }

        case 1769892273: {
          if (field.equals("_radius")) {
            return this._radius;
          }

          break;
        }

        case 3066: {
          if (field.equals("_y")) {
            return this._y;
          }

          break;
        }

        case -1460609034: {
          if (field.equals("_radiusSquared")) {
            return this._radiusSquared;
          }

          break;
        }

        case 3065: {
          if (field.equals("_x")) {
            return this._x;
          }

          break;
        }

      }

      if (__temp_executeDef1) {
        return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
      } else {
        throw null;
      }

    }

  }

  @Override
  public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties) {
    {
      boolean __temp_executeDef1 = true;
      switch (field.hashCode()) {
        case 315675887: {
          if (field.equals("_dirNormY")) {
            return this._dirNormY;
          }

          break;
        }

        case 225158032: {
          if (field.equals("dirNormY")) {
            return this.dirNormY;
          }

          break;
        }

        case 315675886: {
          if (field.equals("_dirNormX")) {
            return this._dirNormX;
          }

          break;
        }

        case 225158031: {
          if (field.equals("dirNormX")) {
            return this.dirNormX;
          }

          break;
        }

        case 3066: {
          if (field.equals("_y")) {
            return this._y;
          }

          break;
        }

        case 121: {
          if (field.equals("y")) {
            return this.y;
          }

          break;
        }

        case 3065: {
          if (field.equals("_x")) {
            return this._x;
          }

          break;
        }

        case 120: {
          if (field.equals("x")) {
            return this.x;
          }

          break;
        }

        case -1460609034: {
          if (field.equals("_radiusSquared")) {
            return this._radiusSquared;
          }

          break;
        }

        case -938578798: {
          if (field.equals("radius")) {
            return this.get_radius();
          }

          break;
        }

        case 1769892273: {
          if (field.equals("_radius")) {
            return this._radius;
          }

          break;
        }

        case -677179915: {
          if (field.equals("radiusSquared")) {
            return this.get_radiusSquared();
          }

          break;
        }

      }

      if (__temp_executeDef1) {
        return super.__hx_getField_f(field, throwErrors, handleProperties);
      } else {
        throw null;
      }

    }

  }

  @Override
  public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs) {
    {
      boolean __temp_executeDef1 = true;
      switch (field.hashCode()) {
        case -1216062705: {
          if (field.equals("set_radius")) {
            return this.set_radius(haxe.lang.Runtime.toDouble(dynargs.__get(0)));
          }

          break;
        }

        case 209133353: {
          if (field.equals("buildApproximation")) {
            __temp_executeDef1 = false;
            this.buildApproximation();
          }

          break;
        }

        case -750657332: {
          if (field.equals("get_radiusSquared")) {
            return this.get_radiusSquared();
          }

          break;
        }

        case -2096813366: {
          if (field.equals("get_approximateObject")) {
            return this.get_approximateObject();
          }

          break;
        }

        case 1142099355: {
          if (field.equals("get_radius")) {
            return this.get_radius();
          }

          break;
        }

      }

      if (__temp_executeDef1) {
        return super.__hx_invokeField(field, dynargs);
      }

    }

    return null;
  }

  @Override
  public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr) {
    baseArr.push("_approximateObject");
    baseArr.push("_dirNormY");
    baseArr.push("_dirNormX");
    baseArr.push("_y");
    baseArr.push("_x");
    baseArr.push("_radiusSquared");
    baseArr.push("_radius");
    baseArr.push("radiusSquared");
    baseArr.push("radius");
    baseArr.push("x");
    baseArr.push("y");
    baseArr.push("dirNormX");
    baseArr.push("dirNormY");
    baseArr.push("approximateObject");
    super.__hx_getFields(baseArr);
  }

}
