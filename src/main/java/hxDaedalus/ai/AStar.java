// Generated by Haxe 3.4.2
package hxDaedalus.ai;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class AStar extends haxe.lang.HxObject
{
	public AStar(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public AStar()
	{
		//line 42 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		hxDaedalus.ai.AStar.__hx_ctor_hxDaedalus_ai_AStar(this);
	}
	
	
	public static void __hx_ctor_hxDaedalus_ai_AStar(hxDaedalus.ai.AStar __hx_this)
	{
		//line 43 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		__hx_this.iterEdge = new hxDaedalus.iterators.FromFaceToInnerEdges();
	}
	
	
	
	
	public double _radius;
	
	
	
	public hxDaedalus.data.Mesh _mesh;
	
	public haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object> closedFaces;
	
	public haxe.root.Array<hxDaedalus.data.Face> sortedOpenedFaces;
	
	public haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object> openedFaces;
	
	public haxe.ds.ObjectMap<hxDaedalus.data.Face, hxDaedalus.data.Edge> entryEdges;
	
	public haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object> entryX;
	
	public haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object> entryY;
	
	public haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object> scoreF;
	
	public haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object> scoreG;
	
	public haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object> scoreH;
	
	public haxe.ds.ObjectMap<hxDaedalus.data.Face, hxDaedalus.data.Face> predecessor;
	
	public hxDaedalus.iterators.FromFaceToInnerEdges iterEdge;
	
	public double radiusSquared;
	
	public double diameter;
	
	public double diameterSquared;
	
	public hxDaedalus.data.Face fromFace;
	
	public hxDaedalus.data.Face toFace;
	
	public hxDaedalus.data.Face curFace;
	
	public void dispose()
	{
		//line 47 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this._mesh = null;
		//line 48 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.closedFaces = null;
		//line 49 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.sortedOpenedFaces = null;
		//line 50 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.openedFaces = null;
		//line 51 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.entryEdges = null;
		//line 52 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.entryX = null;
		//line 53 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.entryY = null;
		//line 54 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.scoreF = null;
		//line 55 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.scoreG = null;
		//line 56 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.scoreH = null;
		//line 57 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.predecessor = null;
	}
	
	
	public double get_radius()
	{
		//line 61 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		return this._radius;
	}
	
	
	public double set_radius(double value)
	{
		//line 65 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this._radius = value;
		//line 66 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.radiusSquared = ( this._radius * this._radius );
		//line 67 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.diameter = ( this._radius * 2 );
		//line 68 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.diameterSquared = ( this.diameter * this.diameter );
		//line 69 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		return value;
	}
	
	
	public hxDaedalus.data.Mesh set_mesh(hxDaedalus.data.Mesh value)
	{
		//line 73 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this._mesh = value;
		//line 74 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		return value;
	}
	
	
	public void findPath(double fromX, double fromY, double toX, double toY, haxe.root.Array<hxDaedalus.data.Face> resultListFaces, haxe.root.Array<hxDaedalus.data.Edge> resultListEdges)
	{
		//line 82 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.closedFaces = new haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>();
		//line 83 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.sortedOpenedFaces = new haxe.root.Array<hxDaedalus.data.Face>();
		//line 84 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.openedFaces = ((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.ds.ObjectMap) (new haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>()) )) );
		//line 85 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.entryEdges = new haxe.ds.ObjectMap<hxDaedalus.data.Face, hxDaedalus.data.Edge>();
		//line 86 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.entryX = new haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>();
		//line 87 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.entryY = new haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>();
		//line 88 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.scoreF = new haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>();
		//line 89 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.scoreG = new haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>();
		//line 90 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.scoreH = new haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>();
		//line 91 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.predecessor = new haxe.ds.ObjectMap<hxDaedalus.data.Face, hxDaedalus.data.Face>();
		//line 93 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		hxDaedalus.data.math.Intersection loc = null;
		//line 94 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		hxDaedalus.data.Edge locEdge = null;
		//line 95 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		hxDaedalus.data.Vertex locVertex = null;
		//line 96 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		double distance = 0.0;
		//line 97 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		hxDaedalus.data.math.Point2D p1 = null;
		//line 98 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		hxDaedalus.data.math.Point2D p2 = null;
		//line 99 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		hxDaedalus.data.math.Point2D p3 = null;
		//line 101 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		loc = hxDaedalus.data.math.Geom2D.locatePosition(fromX, fromY, this._mesh);
		//line 102 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		switch (loc.index)
		{
			case 0:
			{
				//line 103 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				hxDaedalus.data.Vertex vertex = ((hxDaedalus.data.Vertex) (loc.params[0]) );
				//line 104 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				locVertex = vertex;
				//line 105 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				return ;
			}
			
			
			case 1:
			{
				//line 106 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				hxDaedalus.data.Edge edge = ((hxDaedalus.data.Edge) (loc.params[0]) );
				//line 106 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				{
					//line 107 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					locEdge = edge;
					//line 108 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (locEdge.get_isConstrained()) 
					{
						//line 108 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return ;
					}
					
					//line 109 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					this.fromFace = locEdge.get_leftFace();
				}
				
				//line 106 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				break;
			}
			
			
			case 2:
			{
				//line 110 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				hxDaedalus.data.Face face = ((hxDaedalus.data.Face) (loc.params[0]) );
				//line 111 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				this.fromFace = face;
				//line 110 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				break;
			}
			
			
			case 3:
			{
				//line 112 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				break;
			}
			
			
		}
		
		//line 117 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		loc = hxDaedalus.data.math.Geom2D.locatePosition(toX, toY, this._mesh);
		//line 118 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		switch (loc.index)
		{
			case 0:
			{
				//line 119 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				hxDaedalus.data.Vertex vertex1 = ((hxDaedalus.data.Vertex) (loc.params[0]) );
				//line 119 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				{
					//line 120 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					locVertex = vertex1;
					//line 121 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					this.toFace = locVertex.get_edge().get_leftFace();
				}
				
				//line 119 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				break;
			}
			
			
			case 1:
			{
				//line 122 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				hxDaedalus.data.Edge edge1 = ((hxDaedalus.data.Edge) (loc.params[0]) );
				//line 122 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				{
					//line 123 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					locEdge = edge1;
					//line 124 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					this.toFace = locEdge.get_leftFace();
				}
				
				//line 122 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				break;
			}
			
			
			case 2:
			{
				//line 125 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				hxDaedalus.data.Face face1 = ((hxDaedalus.data.Face) (loc.params[0]) );
				//line 126 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				this.toFace = face1;
				//line 125 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				break;
			}
			
			
			case 3:
			{
				//line 127 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				break;
			}
			
			
		}
		
		//line 136 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		this.sortedOpenedFaces.push(this.fromFace);
		//line 137 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		((haxe.ds.ObjectMap<hxDaedalus.data.Face, hxDaedalus.data.Edge>) (((haxe.IMap<hxDaedalus.data.Face, hxDaedalus.data.Edge>) (this.entryEdges) )) ).set(this.fromFace, null);
		//line 138 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.entryX) )) ).set(this.fromFace, fromX);
		//line 139 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.entryY) )) ).set(this.fromFace, fromY);
		//line 140 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.scoreG) )) ).set(this.fromFace, 0);
		//line 141 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		double dist = java.lang.Math.sqrt(( ( (( toX - fromX )) * (( toX - fromX )) ) + ( (( toY - fromY )) * (( toY - fromY )) ) ));
		//line 142 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.scoreH) )) ).set(this.fromFace, dist);
		//line 143 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.scoreF) )) ).set(this.fromFace, dist);
		//line 145 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		hxDaedalus.data.Edge innerEdge = null;
		//line 146 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		hxDaedalus.data.Face neighbourFace = null;
		//line 147 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		double f = 0.0;
		//line 148 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		double g = 0.0;
		//line 149 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		double h = 0.0;
		//line 150 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		hxDaedalus.data.math.Point2D fromPoint = new hxDaedalus.data.math.Point2D(null, null);
		//line 151 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		hxDaedalus.data.math.Point2D entryPoint = new hxDaedalus.data.math.Point2D(null, null);
		//line 152 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		hxDaedalus.data.math.Point2D distancePoint = new hxDaedalus.data.math.Point2D(null, null);
		//line 153 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		boolean fillDatas = false;
		//line 154 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		while (true)
		{
			//line 156 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			if (( this.sortedOpenedFaces.length == 0 )) 
			{
				//line 158 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				this.curFace = null;
				//line 159 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				break;
			}
			
			//line 162 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			this.curFace = ((hxDaedalus.data.Face) (this.sortedOpenedFaces.pop()) );
			//line 163 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			if (( this.curFace == this.toFace )) 
			{
				//line 163 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				break;
			}
			
			//line 165 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			this.iterEdge.set_fromFace(this.curFace);
			//line 166 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			while (true)
			{
				//line 166 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				innerEdge = this.iterEdge.next();
				//line 166 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				if ( ! ((( innerEdge != null ))) ) 
				{
					//line 166 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				//line 167 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				if (innerEdge.get_isConstrained()) 
				{
					//line 167 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					continue;
				}
				
				//line 168 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				neighbourFace = innerEdge.get_rightFace();
				//line 169 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				if (( ! (haxe.lang.Runtime.toBool(((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.closedFaces) )) ).get(neighbourFace))) )) 
				{
					//line 170 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (( ( ( this.curFace != this.fromFace ) && ( this._radius > 0 ) ) &&  ! (this.isWalkableByRadius(((hxDaedalus.data.Edge) (((haxe.ds.ObjectMap<hxDaedalus.data.Face, hxDaedalus.data.Edge>) (((haxe.IMap<hxDaedalus.data.Face, hxDaedalus.data.Edge>) (this.entryEdges) )) ).get(this.curFace)) ), this.curFace, innerEdge))  )) 
					{
						//line 175 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						continue;
					}
					
					//line 178 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					fromPoint.x = ((double) (haxe.lang.Runtime.toDouble(((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.entryX) )) ).get(this.curFace))) );
					//line 179 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					fromPoint.y = ((double) (haxe.lang.Runtime.toDouble(((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.entryY) )) ).get(this.curFace))) );
					//line 180 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					entryPoint.x = ( (( innerEdge.get_originVertex().get_pos().x + innerEdge.get_destinationVertex().get_pos().x )) / 2 );
					//line 181 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					entryPoint.y = ( (( innerEdge.get_originVertex().get_pos().y + innerEdge.get_destinationVertex().get_pos().y )) / 2 );
					//line 182 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					distancePoint.x = ( entryPoint.x - toX );
					//line 183 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					distancePoint.y = ( entryPoint.y - toY );
					//line 184 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					h = distancePoint.get_length();
					//line 185 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					distancePoint.x = ( fromPoint.x - entryPoint.x );
					//line 186 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					distancePoint.y = ( fromPoint.y - entryPoint.y );
					//line 187 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					g = ((double) (haxe.lang.Runtime.toDouble(haxe.lang.Runtime.plus(((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.scoreG) )) ).get(this.curFace), distancePoint.get_length()))) );
					//line 188 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					f = ( h + g );
					//line 189 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					fillDatas = false;
					//line 190 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (( haxe.lang.Runtime.eq(((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.openedFaces) )) ).get(neighbourFace), null) || ( ! (haxe.lang.Runtime.toBool(((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.openedFaces) )) ).get(neighbourFace))) ) )) 
					{
						//line 192 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.sortedOpenedFaces.push(neighbourFace);
						//line 193 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.openedFaces) )) ).set(neighbourFace, true);
						//line 194 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						fillDatas = true;
					}
					else
					{
						//line 196 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						if (( haxe.lang.Runtime.compare(((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.scoreF) )) ).get(neighbourFace), f) > 0 )) 
						{
							//line 198 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
							fillDatas = true;
						}
						
					}
					
					//line 200 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (fillDatas) 
					{
						//line 202 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						((haxe.ds.ObjectMap<hxDaedalus.data.Face, hxDaedalus.data.Edge>) (((haxe.IMap<hxDaedalus.data.Face, hxDaedalus.data.Edge>) (this.entryEdges) )) ).set(neighbourFace, innerEdge);
						//line 203 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						{
							//line 203 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
							double v = entryPoint.x;
							//line 203 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
							((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.entryX) )) ).set(neighbourFace, v);
						}
						
						//line 204 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						{
							//line 204 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
							double v1 = entryPoint.y;
							//line 204 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
							((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.entryY) )) ).set(neighbourFace, v1);
						}
						
						//line 205 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.scoreF) )) ).set(neighbourFace, f);
						//line 206 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.scoreG) )) ).set(neighbourFace, g);
						//line 207 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.scoreH) )) ).set(neighbourFace, h);
						//line 208 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						{
							//line 208 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
							hxDaedalus.data.Face v2 = this.curFace;
							//line 208 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
							((haxe.ds.ObjectMap<hxDaedalus.data.Face, hxDaedalus.data.Face>) (((haxe.IMap<hxDaedalus.data.Face, hxDaedalus.data.Face>) (this.predecessor) )) ).set(neighbourFace, v2);
						}
						
					}
					
				}
				
			}
			
			//line 213 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.openedFaces) )) ).set(this.curFace, false);
			//line 214 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.closedFaces) )) ).set(this.curFace, true);
			//line 215 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			this.sortedOpenedFaces.sort(((haxe.lang.Function) (new haxe.lang.Closure(this, "sortingFaces")) ));
		}
		
		//line 220 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		if (( this.curFace == null )) 
		{
			//line 221 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			return ;
		}
		
		//line 225 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		resultListFaces.push(this.curFace);
		//line 227 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		while (( this.curFace != this.fromFace ))
		{
			//line 228 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			resultListEdges.unshift(((hxDaedalus.data.Edge) (((haxe.ds.ObjectMap<hxDaedalus.data.Face, hxDaedalus.data.Edge>) (((haxe.IMap<hxDaedalus.data.Face, hxDaedalus.data.Edge>) (this.entryEdges) )) ).get(this.curFace)) ));
			//line 231 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			this.curFace = ((hxDaedalus.data.Face) (((haxe.ds.ObjectMap<hxDaedalus.data.Face, hxDaedalus.data.Face>) (((haxe.IMap<hxDaedalus.data.Face, hxDaedalus.data.Face>) (this.predecessor) )) ).get(this.curFace)) );
			//line 233 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			resultListFaces.unshift(this.curFace);
		}
		
	}
	
	
	public int sortingFaces(hxDaedalus.data.Face a, hxDaedalus.data.Face b)
	{
		//line 239 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		if (haxe.lang.Runtime.eq(((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.scoreF) )) ).get(a), ((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.scoreF) )) ).get(b))) 
		{
			//line 240 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			return 0;
		}
		else
		{
			//line 241 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			if (( haxe.lang.Runtime.compare(((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.scoreF) )) ).get(a), ((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (((haxe.IMap<hxDaedalus.data.Face, java.lang.Object>) (this.scoreF) )) ).get(b)) < 0 )) 
			{
				//line 242 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				return 1;
			}
			else
			{
				//line 244 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				return -1;
			}
			
		}
		
	}
	
	
	public boolean isWalkableByRadius(hxDaedalus.data.Edge fromEdge, hxDaedalus.data.Face throughFace, hxDaedalus.data.Edge toEdge)
	{
		//line 249 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		hxDaedalus.data.Vertex vA = null;
		//line 250 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		hxDaedalus.data.Vertex vB = null;
		//line 251 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		hxDaedalus.data.Vertex vC = null;
		//line 254 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		if (( fromEdge.get_originVertex() == toEdge.get_originVertex() )) 
		{
			//line 256 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			vA = fromEdge.get_destinationVertex();
			//line 257 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			vB = toEdge.get_destinationVertex();
			//line 258 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			vC = fromEdge.get_originVertex();
		}
		else
		{
			//line 260 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			if (( fromEdge.get_destinationVertex() == toEdge.get_destinationVertex() )) 
			{
				//line 262 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				vA = fromEdge.get_originVertex();
				//line 263 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				vB = toEdge.get_originVertex();
				//line 264 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				vC = fromEdge.get_destinationVertex();
			}
			else
			{
				//line 266 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				if (( fromEdge.get_originVertex() == toEdge.get_destinationVertex() )) 
				{
					//line 268 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					vA = fromEdge.get_destinationVertex();
					//line 269 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					vB = toEdge.get_originVertex();
					//line 270 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					vC = fromEdge.get_originVertex();
				}
				else
				{
					//line 272 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (( fromEdge.get_destinationVertex() == toEdge.get_originVertex() )) 
					{
						//line 274 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						vA = fromEdge.get_originVertex();
						//line 275 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						vB = toEdge.get_destinationVertex();
						//line 276 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						vC = fromEdge.get_destinationVertex();
					}
					
				}
				
			}
			
		}
		
		//line 279 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		double dot = 0.0;
		//line 280 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		boolean result = false;
		//line 281 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		double distSquared = 0.0;
		//line 284 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		dot = ( ( (( vC.get_pos().x - vA.get_pos().x )) * (( vB.get_pos().x - vA.get_pos().x )) ) + ( (( vC.get_pos().y - vA.get_pos().y )) * (( vB.get_pos().y - vA.get_pos().y )) ) );
		//line 285 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		if (( dot <= 0 )) 
		{
			//line 287 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			distSquared = ( ( (( vC.get_pos().x - vA.get_pos().x )) * (( vC.get_pos().x - vA.get_pos().x )) ) + ( (( vC.get_pos().y - vA.get_pos().y )) * (( vC.get_pos().y - vA.get_pos().y )) ) );
			//line 288 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			if (( distSquared >= this.diameterSquared )) 
			{
				//line 289 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				return true;
			}
			else
			{
				//line 291 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				return false;
			}
			
		}
		
		//line 297 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		dot = ( ( (( vC.get_pos().x - vB.get_pos().x )) * (( vA.get_pos().x - vB.get_pos().x )) ) + ( (( vC.get_pos().y - vB.get_pos().y )) * (( vA.get_pos().y - vB.get_pos().y )) ) );
		//line 298 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		if (( dot <= 0 )) 
		{
			//line 300 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			distSquared = ( ( (( vC.get_pos().x - vB.get_pos().x )) * (( vC.get_pos().x - vB.get_pos().x )) ) + ( (( vC.get_pos().y - vB.get_pos().y )) * (( vC.get_pos().y - vB.get_pos().y )) ) );
			//line 301 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			if (( distSquared >= this.diameterSquared )) 
			{
				//line 302 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				return true;
			}
			else
			{
				//line 304 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				return false;
			}
			
		}
		
		//line 310 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		hxDaedalus.data.Edge adjEdge = null;
		//line 311 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		if (( ( ( ( throughFace.get_edge() != fromEdge ) && ( throughFace.get_edge().get_oppositeEdge() != fromEdge ) ) && ( throughFace.get_edge() != toEdge ) ) && ( throughFace.get_edge().get_oppositeEdge() != toEdge ) )) 
		{
			//line 312 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			adjEdge = throughFace.get_edge();
		}
		else
		{
			//line 313 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			if (( ( ( ( throughFace.get_edge().get_nextLeftEdge() != fromEdge ) && ( throughFace.get_edge().get_nextLeftEdge().get_oppositeEdge() != fromEdge ) ) && ( throughFace.get_edge().get_nextLeftEdge() != toEdge ) ) && ( throughFace.get_edge().get_nextLeftEdge().get_oppositeEdge() != toEdge ) )) 
			{
				//line 314 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				adjEdge = throughFace.get_edge().get_nextLeftEdge();
			}
			else
			{
				//line 316 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				adjEdge = throughFace.get_edge().get_prevLeftEdge();
			}
			
		}
		
		//line 319 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		if (adjEdge.get_isConstrained()) 
		{
			//line 320 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			hxDaedalus.data.math.Point2D proj = new hxDaedalus.data.math.Point2D(vC.get_pos().x, vC.get_pos().y);
			//line 321 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			hxDaedalus.data.math.Geom2D.projectOrthogonaly(proj, adjEdge);
			//line 322 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			distSquared = ( ( (( proj.x - vC.get_pos().x )) * (( proj.x - vC.get_pos().x )) ) + ( (( proj.y - vC.get_pos().y )) * (( proj.y - vC.get_pos().y )) ) );
			//line 323 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			if (( distSquared >= this.diameterSquared )) 
			{
				//line 324 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				return true;
			}
			else
			{
				//line 326 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				return false;
			}
			
		}
		else
		{
			//line 332 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			double distSquaredA = ( ( (( vC.get_pos().x - vA.get_pos().x )) * (( vC.get_pos().x - vA.get_pos().x )) ) + ( (( vC.get_pos().y - vA.get_pos().y )) * (( vC.get_pos().y - vA.get_pos().y )) ) );
			//line 333 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			double distSquaredB = ( ( (( vC.get_pos().x - vB.get_pos().x )) * (( vC.get_pos().x - vB.get_pos().x )) ) + ( (( vC.get_pos().y - vB.get_pos().y )) * (( vC.get_pos().y - vB.get_pos().y )) ) );
			//line 334 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			if (( ( distSquaredA < this.diameterSquared ) || ( distSquaredB < this.diameterSquared ) )) 
			{
				//line 335 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				return false;
			}
			else
			{
				//line 337 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				haxe.root.Array<hxDaedalus.data.Face> vFaceToCheck = new haxe.root.Array<hxDaedalus.data.Face>();
				//line 338 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				haxe.root.Array<hxDaedalus.data.Edge> vFaceIsFromEdge = new haxe.root.Array<hxDaedalus.data.Edge>();
				//line 339 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object> facesDone = new haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>();
				//line 340 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				vFaceIsFromEdge.push(adjEdge);
				//line 341 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				if (( adjEdge.get_leftFace() == throughFace )) 
				{
					//line 342 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					vFaceToCheck.push(adjEdge.get_rightFace());
					//line 343 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					facesDone.set(adjEdge.get_rightFace(), true);
				}
				else
				{
					//line 345 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					vFaceToCheck.push(adjEdge.get_leftFace());
					//line 346 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					facesDone.set(adjEdge.get_leftFace(), true);
				}
				
				//line 349 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				hxDaedalus.data.Face currFace = null;
				//line 350 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				hxDaedalus.data.Edge faceFromEdge = null;
				//line 351 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				hxDaedalus.data.Edge currEdgeA = null;
				//line 352 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				hxDaedalus.data.Face nextFaceA = null;
				//line 353 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				hxDaedalus.data.Edge currEdgeB = null;
				//line 354 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				hxDaedalus.data.Face nextFaceB = null;
				//line 355 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				while (( vFaceToCheck.length > 0 ))
				{
					//line 356 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					currFace = ((hxDaedalus.data.Face) (vFaceToCheck.shift()) );
					//line 357 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					faceFromEdge = ((hxDaedalus.data.Edge) (vFaceIsFromEdge.shift()) );
					//line 360 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (( ( currFace.get_edge() == faceFromEdge ) || ( currFace.get_edge() == faceFromEdge.get_oppositeEdge() ) )) 
					{
						//line 362 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						currEdgeA = currFace.get_edge().get_nextLeftEdge();
						//line 363 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						currEdgeB = currFace.get_edge().get_nextLeftEdge().get_nextLeftEdge();
					}
					else
					{
						//line 364 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						if (( ( currFace.get_edge().get_nextLeftEdge() == faceFromEdge ) || ( currFace.get_edge().get_nextLeftEdge() == faceFromEdge.get_oppositeEdge() ) )) 
						{
							//line 366 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
							currEdgeA = currFace.get_edge();
							//line 367 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
							currEdgeB = currFace.get_edge().get_nextLeftEdge().get_nextLeftEdge();
						}
						else
						{
							//line 369 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
							currEdgeA = currFace.get_edge();
							//line 370 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
							currEdgeB = currFace.get_edge().get_nextLeftEdge();
						}
						
					}
					
					//line 373 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (( currEdgeA.get_leftFace() == currFace )) 
					{
						//line 374 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						nextFaceA = currEdgeA.get_rightFace();
					}
					else
					{
						//line 376 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						nextFaceA = currEdgeA.get_leftFace();
					}
					
					//line 378 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (( currEdgeB.get_leftFace() == currFace )) 
					{
						//line 379 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						nextFaceB = currEdgeB.get_rightFace();
					}
					else
					{
						//line 381 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						nextFaceB = currEdgeB.get_leftFace();
					}
					
					//line 385 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (( ( ! (haxe.lang.Runtime.toBool(((java.lang.Object) (facesDone.get(nextFaceA)) ))) ) && ( hxDaedalus.data.math.Geom2D.distanceSquaredVertexToEdge(vC, currEdgeA) < this.diameterSquared ) )) 
					{
						//line 387 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						if (currEdgeA.get_isConstrained()) 
						{
							//line 389 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
							return false;
						}
						else
						{
							//line 392 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
							vFaceToCheck.push(nextFaceA);
							//line 393 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
							vFaceIsFromEdge.push(currEdgeA);
							//line 394 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
							facesDone.set(nextFaceA, true);
						}
						
					}
					
					//line 398 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (( ( ! (haxe.lang.Runtime.toBool(((java.lang.Object) (facesDone.get(nextFaceB)) ))) ) && ( hxDaedalus.data.math.Geom2D.distanceSquaredVertexToEdge(vC, currEdgeB) < this.diameterSquared ) )) 
					{
						//line 400 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						if (currEdgeB.get_isConstrained()) 
						{
							//line 402 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
							return false;
						}
						else
						{
							//line 405 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
							vFaceToCheck.push(nextFaceB);
							//line 406 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
							vFaceIsFromEdge.push(currEdgeB);
							//line 407 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
							facesDone.set(nextFaceB, true);
						}
						
					}
					
				}
				
				//line 412 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				return true;
			}
			
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		{
			//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			boolean __temp_executeDef1 = true;
			//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			switch (field.hashCode())
			{
				case -2099968614:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("diameterSquared")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.diameterSquared = ((double) (value) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -938578798:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("radius")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.set_radius(value);
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -233204595:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("diameter")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.diameter = ((double) (value) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 1769892273:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("_radius")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this._radius = ((double) (value) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -677179915:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("radiusSquared")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.radiusSquared = ((double) (value) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
			}
			
			//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			if (__temp_executeDef1) 
			{
				//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		{
			//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			boolean __temp_executeDef1 = true;
			//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			switch (field.hashCode())
			{
				case 1125625021:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("curFace")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.curFace = ((hxDaedalus.data.Face) (value) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -938578798:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("radius")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.set_radius(((double) (haxe.lang.Runtime.toDouble(value)) ));
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -869293192:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("toFace")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.toFace = ((hxDaedalus.data.Face) (value) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 1769892273:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("_radius")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this._radius = ((double) (haxe.lang.Runtime.toDouble(value)) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -1245086425:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("fromFace")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.fromFace = ((hxDaedalus.data.Face) (value) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 3347949:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("mesh")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.set_mesh(((hxDaedalus.data.Mesh) (value) ));
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -2099968614:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("diameterSquared")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.diameterSquared = ((double) (haxe.lang.Runtime.toDouble(value)) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 91082444:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("_mesh")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this._mesh = ((hxDaedalus.data.Mesh) (value) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -233204595:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("diameter")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.diameter = ((double) (haxe.lang.Runtime.toDouble(value)) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 616703914:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("closedFaces")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.closedFaces = ((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (value) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -677179915:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("radiusSquared")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.radiusSquared = ((double) (haxe.lang.Runtime.toDouble(value)) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 63996880:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("sortedOpenedFaces")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.sortedOpenedFaces = ((haxe.root.Array<hxDaedalus.data.Face>) (value) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 1181683957:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("iterEdge")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.iterEdge = ((hxDaedalus.iterators.FromFaceToInnerEdges) (value) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 512628429:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("openedFaces")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.openedFaces = ((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (value) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -1925032183:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("predecessor")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.predecessor = ((haxe.ds.ObjectMap<hxDaedalus.data.Face, hxDaedalus.data.Face>) (value) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -1989818108:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("entryEdges")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.entryEdges = ((haxe.ds.ObjectMap<hxDaedalus.data.Face, hxDaedalus.data.Edge>) (value) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -907766794:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("scoreH")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.scoreH = ((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (value) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -1298266586:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("entryX")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.entryX = ((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (value) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -907766795:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("scoreG")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.scoreG = ((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (value) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -1298266585:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("entryY")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.entryY = ((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (value) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -907766796:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("scoreF")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.scoreF = ((haxe.ds.ObjectMap<hxDaedalus.data.Face, java.lang.Object>) (value) );
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return value;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
			}
			
			//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			if (__temp_executeDef1) 
			{
				//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		{
			//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			boolean __temp_executeDef1 = true;
			//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			switch (field.hashCode())
			{
				case 1566142678:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("isWalkableByRadius")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "isWalkableByRadius")) );
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -938578798:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("radius")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.get_radius();
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 96567954:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("sortingFaces")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "sortingFaces")) );
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 1769892273:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("_radius")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this._radius;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -679327362:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("findPath")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "findPath")) );
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 91082444:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("_mesh")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this._mesh;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 1415348138:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("set_mesh")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set_mesh")) );
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 616703914:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("closedFaces")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.closedFaces;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -1216062705:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("set_radius")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set_radius")) );
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 63996880:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("sortedOpenedFaces")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.sortedOpenedFaces;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 1142099355:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("get_radius")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_radius")) );
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 512628429:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("openedFaces")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.openedFaces;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 1671767583:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("dispose")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "dispose")) );
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -1989818108:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("entryEdges")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.entryEdges;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 1125625021:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("curFace")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.curFace;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -1298266586:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("entryX")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.entryX;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -869293192:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("toFace")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.toFace;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -1298266585:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("entryY")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.entryY;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -1245086425:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("fromFace")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.fromFace;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -907766796:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("scoreF")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.scoreF;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -2099968614:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("diameterSquared")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.diameterSquared;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -907766795:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("scoreG")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.scoreG;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -233204595:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("diameter")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.diameter;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -907766794:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("scoreH")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.scoreH;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -677179915:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("radiusSquared")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.radiusSquared;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -1925032183:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("predecessor")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.predecessor;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 1181683957:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("iterEdge")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.iterEdge;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
			}
			
			//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			if (__temp_executeDef1) 
			{
				//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		{
			//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			boolean __temp_executeDef1 = true;
			//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			switch (field.hashCode())
			{
				case -2099968614:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("diameterSquared")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.diameterSquared;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -938578798:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("radius")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.get_radius();
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -233204595:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("diameter")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.diameter;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 1769892273:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("_radius")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this._radius;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -677179915:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("radiusSquared")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.radiusSquared;
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
			}
			
			//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			if (__temp_executeDef1) 
			{
				//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		{
			//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			boolean __temp_executeDef1 = true;
			//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			switch (field.hashCode())
			{
				case 1566142678:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("isWalkableByRadius")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.isWalkableByRadius(((hxDaedalus.data.Edge) (dynargs.__get(0)) ), ((hxDaedalus.data.Face) (dynargs.__get(1)) ), ((hxDaedalus.data.Edge) (dynargs.__get(2)) ));
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 1671767583:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("dispose")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.dispose();
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 96567954:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("sortingFaces")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.sortingFaces(((hxDaedalus.data.Face) (dynargs.__get(0)) ), ((hxDaedalus.data.Face) (dynargs.__get(1)) ));
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 1142099355:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("get_radius")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.get_radius();
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -679327362:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("findPath")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						this.findPath(((double) (haxe.lang.Runtime.toDouble(dynargs.__get(0))) ), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(1))) ), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(2))) ), ((double) (haxe.lang.Runtime.toDouble(dynargs.__get(3))) ), ((haxe.root.Array<hxDaedalus.data.Face>) (dynargs.__get(4)) ), ((haxe.root.Array<hxDaedalus.data.Edge>) (dynargs.__get(5)) ));
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case -1216062705:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("set_radius")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.set_radius(((double) (haxe.lang.Runtime.toDouble(dynargs.__get(0))) ));
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
				case 1415348138:
				{
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					if (field.equals("set_mesh")) 
					{
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						__temp_executeDef1 = false;
						//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
						return this.set_mesh(((hxDaedalus.data.Mesh) (dynargs.__get(0)) ));
					}
					
					//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
					break;
				}
				
				
			}
			
			//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
			if (__temp_executeDef1) 
			{
				//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("curFace");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("toFace");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("fromFace");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("diameterSquared");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("diameter");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("radiusSquared");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("iterEdge");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("predecessor");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("scoreH");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("scoreG");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("scoreF");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("entryY");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("entryX");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("entryEdges");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("openedFaces");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("sortedOpenedFaces");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("closedFaces");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("_mesh");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("mesh");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("_radius");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		baseArr.push("radius");
		//line 15 "/Users/tao/projects/hxDaedalus/src/hxDaedalus/ai/AStar.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


