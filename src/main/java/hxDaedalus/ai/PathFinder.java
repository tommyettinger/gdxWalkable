// Generated by Haxe 3.4.2
package hxDaedalus.ai;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class PathFinder extends haxe.lang.HxObject
{
	public PathFinder(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public PathFinder()
	{
		hxDaedalus.ai.PathFinder.__hx_ctor_hxDaedalus_ai_PathFinder(this);
	}
	
	
	public static void __hx_ctor_hxDaedalus_ai_PathFinder(hxDaedalus.ai.PathFinder __hx_this)
	{
		__hx_this.astar = new hxDaedalus.ai.AStar();
		__hx_this.funnel = new hxDaedalus.ai.Funnel();
		__hx_this.listFaces = new haxe.root.Array<hxDaedalus.data.Face>();
		__hx_this.listEdges = new haxe.root.Array<hxDaedalus.data.Edge>();
	}
	
	
	public hxDaedalus.ai.EntityAI entity;
	
	
	
	public hxDaedalus.data.Mesh _mesh;
	
	public hxDaedalus.ai.AStar astar;
	
	public hxDaedalus.ai.Funnel funnel;
	
	public double radius;
	
	public haxe.root.Array<hxDaedalus.data.Face> listFaces;
	
	public haxe.root.Array<hxDaedalus.data.Edge> listEdges;
	
	public void dispose()
	{
		this._mesh = null;
		this.astar.dispose();
		this.astar = null;
		this.funnel.dispose();
		this.funnel = null;
		this.listEdges = null;
		this.listFaces = null;
	}
	
	
	public hxDaedalus.data.Mesh get_mesh()
	{
		return this._mesh;
	}
	
	
	public hxDaedalus.data.Mesh set_mesh(hxDaedalus.data.Mesh value)
	{
		this._mesh = value;
		this.astar.set_mesh(this._mesh);
		return value;
	}
	
	
	public void findPath(double toX, double toY, haxe.root.Array<java.lang.Object> resultPath)
	{
		resultPath.splice(0, resultPath.length);
		boolean cond = ( this._mesh == null );
		boolean cond1 = ( this.entity == null );
		if (hxDaedalus.data.math.Geom2D.isCircleIntersectingAnyConstraint(toX, toY, this.entity.get_radius(), this._mesh)) 
		{
			return ;
		}
		
		this.astar.set_radius(this.entity.get_radius());
		this.funnel.set_radius(this.entity.get_radius());
		this.listFaces.splice(0, this.listFaces.length);
		this.listEdges.splice(0, this.listEdges.length);
		this.astar.findPath(this.entity.x, this.entity.y, toX, toY, this.listFaces, this.listEdges);
		if (( this.listFaces.length == 0 )) 
		{
			return ;
		}
		
		this.funnel.findPath(this.entity.x, this.entity.y, toX, toY, this.listFaces, this.listEdges, resultPath);
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			switch (field.hashCode())
			{
				case -938578798:
				{
					if (field.equals("radius")) 
					{
						this.radius = value;
						return value;
					}
					
					break;
				}
				
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			switch (field.hashCode())
			{
				case -1248568232:
				{
					if (field.equals("listEdges")) 
					{
						this.listEdges = ((haxe.root.Array<hxDaedalus.data.Edge>) (value) );
						return value;
					}
					
					break;
				}
				
				
				case -1298275357:
				{
					if (field.equals("entity")) 
					{
						this.entity = ((hxDaedalus.ai.EntityAI) (value) );
						return value;
					}
					
					break;
				}
				
				
				case -1247737928:
				{
					if (field.equals("listFaces")) 
					{
						this.listFaces = ((haxe.root.Array<hxDaedalus.data.Face>) (value) );
						return value;
					}
					
					break;
				}
				
				
				case 3347949:
				{
					if (field.equals("mesh")) 
					{
						this.set_mesh(((hxDaedalus.data.Mesh) (value) ));
						return value;
					}
					
					break;
				}
				
				
				case -938578798:
				{
					if (field.equals("radius")) 
					{
						this.radius = haxe.lang.Runtime.toDouble(value);
						return value;
					}
					
					break;
				}
				
				
				case 91082444:
				{
					if (field.equals("_mesh")) 
					{
						this._mesh = ((hxDaedalus.data.Mesh) (value) );
						return value;
					}
					
					break;
				}
				
				
				case -1263355978:
				{
					if (field.equals("funnel")) 
					{
						this.funnel = ((hxDaedalus.ai.Funnel) (value) );
						return value;
					}
					
					break;
				}
				
				
				case 93122099:
				{
					if (field.equals("astar")) 
					{
						this.astar = ((hxDaedalus.ai.AStar) (value) );
						return value;
					}
					
					break;
				}
				
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			switch (field.hashCode())
			{
				case -679327362:
				{
					if (field.equals("findPath")) 
					{
						return new haxe.lang.Closure(this, "findPath");
					}
					
					break;
				}
				
				
				case -1298275357:
				{
					if (field.equals("entity")) 
					{
						return this.entity;
					}
					
					break;
				}
				
				
				case 1415348138:
				{
					if (field.equals("set_mesh")) 
					{
						return new haxe.lang.Closure(this, "set_mesh");
					}
					
					break;
				}
				
				
				case 3347949:
				{
					if (field.equals("mesh")) 
					{
						return this.get_mesh();
					}
					
					break;
				}
				
				
				case 1976460598:
				{
					if (field.equals("get_mesh")) 
					{
						return new haxe.lang.Closure(this, "get_mesh");
					}
					
					break;
				}
				
				
				case 91082444:
				{
					if (field.equals("_mesh")) 
					{
						return this._mesh;
					}
					
					break;
				}
				
				
				case 1671767583:
				{
					if (field.equals("dispose")) 
					{
						return new haxe.lang.Closure(this, "dispose");
					}
					
					break;
				}
				
				
				case 93122099:
				{
					if (field.equals("astar")) 
					{
						return this.astar;
					}
					
					break;
				}
				
				
				case -1248568232:
				{
					if (field.equals("listEdges")) 
					{
						return this.listEdges;
					}
					
					break;
				}
				
				
				case -1263355978:
				{
					if (field.equals("funnel")) 
					{
						return this.funnel;
					}
					
					break;
				}
				
				
				case -1247737928:
				{
					if (field.equals("listFaces")) 
					{
						return this.listFaces;
					}
					
					break;
				}
				
				
				case -938578798:
				{
					if (field.equals("radius")) 
					{
						return this.radius;
					}
					
					break;
				}
				
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		{
			boolean __temp_executeDef1 = true;
			switch (field.hashCode())
			{
				case -938578798:
				{
					if (field.equals("radius")) 
					{
						return this.radius;
					}
					
					break;
				}
				
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		{
			boolean __temp_executeDef1 = true;
			switch (field.hashCode())
			{
				case -679327362:
				{
					if (field.equals("findPath")) 
					{
						__temp_executeDef1 = false;
						this.findPath(haxe.lang.Runtime.toDouble(dynargs.__get(0)), haxe.lang.Runtime.toDouble(dynargs.__get(1)), ((haxe.root.Array<java.lang.Object>) (dynargs.__get(2)) ));
					}
					
					break;
				}
				
				
				case 1671767583:
				{
					if (field.equals("dispose")) 
					{
						__temp_executeDef1 = false;
						this.dispose();
					}
					
					break;
				}
				
				
				case 1415348138:
				{
					if (field.equals("set_mesh")) 
					{
						return this.set_mesh(((hxDaedalus.data.Mesh) (dynargs.__get(0)) ));
					}
					
					break;
				}
				
				
				case 1976460598:
				{
					if (field.equals("get_mesh")) 
					{
						return this.get_mesh();
					}
					
					break;
				}
				
				
			}
			
			if (__temp_executeDef1) 
			{
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		baseArr.push("listEdges");
		baseArr.push("listFaces");
		baseArr.push("radius");
		baseArr.push("funnel");
		baseArr.push("astar");
		baseArr.push("_mesh");
		baseArr.push("mesh");
		baseArr.push("entity");
		super.__hx_getFields(baseArr);
	}
	
	
}


