// Generated by Haxe 3.4.2
package haxe.lang;

public class DynamicObject extends haxe.lang.HxObject
{
	public DynamicObject(haxe.lang.EmptyObject empty)
	{
		super(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public DynamicObject()
	{
		haxe.lang.DynamicObject.__hx_ctor_haxe_lang_DynamicObject(this);
	}
	
	
	public DynamicObject(java.lang.String[] __hx_hashes, java.lang.Object[] __hx_dynamics, java.lang.String[] __hx_hashes_f, double[] __hx_dynamics_f)
	{
		haxe.lang.DynamicObject.__hx_ctor_haxe_lang_DynamicObject(this, __hx_hashes, __hx_dynamics, __hx_hashes_f, __hx_dynamics_f);
	}
	
	
	public static void __hx_ctor_haxe_lang_DynamicObject(haxe.lang.DynamicObject __hx_this)
	{
		__hx_this.__hx_hashes = new java.lang.String[]{};
		__hx_this.__hx_dynamics = new java.lang.Object[]{};
		__hx_this.__hx_hashes_f = new java.lang.String[]{};
		__hx_this.__hx_dynamics_f = new double[]{};
	}
	
	
	public static void __hx_ctor_haxe_lang_DynamicObject(haxe.lang.DynamicObject __hx_this, java.lang.String[] __hx_hashes, java.lang.Object[] __hx_dynamics, java.lang.String[] __hx_hashes_f, double[] __hx_dynamics_f)
	{
		__hx_this.__hx_hashes = __hx_hashes;
		__hx_this.__hx_dynamics = __hx_dynamics;
		__hx_this.__hx_hashes_f = __hx_hashes_f;
		__hx_this.__hx_dynamics_f = __hx_dynamics_f;
		__hx_this.__hx_length = __hx_hashes.length;
		__hx_this.__hx_length_f = __hx_hashes_f.length;
	}
	
	
	@Override public java.lang.String toString()
	{
		haxe.lang.Function ts = ((haxe.lang.Function) (haxe.lang.Runtime.getField(this, "toString", false)) );
		if (( ts != null )) 
		{
			return haxe.lang.Runtime.toString(ts.__hx_invoke0_o());
		}
		
		haxe.root.StringBuf ret = new haxe.root.StringBuf();
		ret.add(haxe.lang.Runtime.toString("{"));
		boolean first = true;
		{
			int _g = 0;
			haxe.root.Array<java.lang.String> _g1 = haxe.root.Reflect.fields(this);
			while (( _g < _g1.length ))
			{
				java.lang.String f = _g1.__get(_g);
				 ++ _g;
				if (first) 
				{
					first = false;
				}
				else
				{
					ret.add(haxe.lang.Runtime.toString(","));
				}
				
				ret.add(haxe.lang.Runtime.toString(" "));
				ret.add(haxe.lang.Runtime.toString(f));
				ret.add(haxe.lang.Runtime.toString(" : "));
				ret.add(haxe.root.Reflect.field(this, f));
			}
			
		}
		
		if ( ! (first) ) 
		{
			ret.add(haxe.lang.Runtime.toString(" "));
		}
		
		ret.add(haxe.lang.Runtime.toString("}"));
		return ret.toString();
	}
	
	
	public java.lang.String[] __hx_hashes;
	
	public java.lang.Object[] __hx_dynamics;
	
	public java.lang.String[] __hx_hashes_f;
	
	public double[] __hx_dynamics_f;
	
	public int __hx_length;
	
	public int __hx_length_f;
	
	@Override public boolean __hx_deleteField(java.lang.String field)
	{
		int res = haxe.lang.FieldLookup.findHash(field, this.__hx_hashes, this.__hx_length);
		if (( res >= 0 )) 
		{
			haxe.lang.FieldLookup.removeString(this.__hx_hashes, this.__hx_length, res);
			haxe.lang.FieldLookup.removeDynamic(this.__hx_dynamics, this.__hx_length, res);
			this.__hx_length--;
			return true;
		}
		else
		{
			res = haxe.lang.FieldLookup.findHash(field, this.__hx_hashes_f, this.__hx_length_f);
			if (( res >= 0 )) 
			{
				haxe.lang.FieldLookup.removeString(this.__hx_hashes_f, this.__hx_length_f, res);
				haxe.lang.FieldLookup.removeFloat(this.__hx_dynamics_f, this.__hx_length_f, res);
				this.__hx_length_f--;
				return true;
			}
			
		}
		
		return false;
	}
	
	
	@Override public java.lang.Object __hx_lookupField(java.lang.String field, boolean throwErrors, boolean isCheck)
	{
		int res = haxe.lang.FieldLookup.findHash(field, this.__hx_hashes, this.__hx_length);
		if (( res >= 0 )) 
		{
			return this.__hx_dynamics[res];
		}
		else
		{
			res = haxe.lang.FieldLookup.findHash(field, this.__hx_hashes_f, this.__hx_length_f);
			if (( res >= 0 )) 
			{
				return this.__hx_dynamics_f[res];
			}
			
		}
		
		if (isCheck) 
		{
			return haxe.lang.Runtime.undefined;
		}
		else
		{
			return null;
		}
		
	}
	
	
	@Override public double __hx_lookupField_f(java.lang.String field, boolean throwErrors)
	{
		int res = haxe.lang.FieldLookup.findHash(field, this.__hx_hashes_f, this.__hx_length_f);
		if (( res >= 0 )) 
		{
			return this.__hx_dynamics_f[res];
		}
		else
		{
			res = haxe.lang.FieldLookup.findHash(field, this.__hx_hashes, this.__hx_length);
			if (( res >= 0 )) 
			{
				return Runtime.toDouble(this.__hx_dynamics[res]);
			}
			
		}
		
		return 0.0;
	}
	
	
	@Override public java.lang.Object __hx_lookupSetField(java.lang.String field, java.lang.Object value)
	{
		int res = haxe.lang.FieldLookup.findHash(field, this.__hx_hashes, this.__hx_length);
		if (( res >= 0 )) 
		{
			return this.__hx_dynamics[res] = value;
		}
		else
		{
			int res2 = haxe.lang.FieldLookup.findHash(field, this.__hx_hashes_f, this.__hx_length_f);
			if (( res2 >= 0 )) 
			{
				haxe.lang.FieldLookup.removeString(this.__hx_hashes_f, this.__hx_length_f, res2);
				haxe.lang.FieldLookup.removeFloat(this.__hx_dynamics_f, this.__hx_length_f, res2);
				this.__hx_length_f--;
			}
			
		}
		
		this.__hx_hashes = haxe.lang.FieldLookup.insertString(this.__hx_hashes, this.__hx_length,  ~ (res) , field);
		this.__hx_dynamics = haxe.lang.FieldLookup.insertDynamic(this.__hx_dynamics, this.__hx_length,  ~ (res) , value);
		this.__hx_length++;
		return value;
	}
	
	
	@Override public double __hx_lookupSetField_f(java.lang.String field, double value)
	{
		int res = haxe.lang.FieldLookup.findHash(field, this.__hx_hashes_f, this.__hx_length_f);
		if (( res >= 0 )) 
		{
			return this.__hx_dynamics_f[res] = value;
		}
		else
		{
			int res2 = haxe.lang.FieldLookup.findHash(field, this.__hx_hashes, this.__hx_length);
			if (( res2 >= 0 )) 
			{
				haxe.lang.FieldLookup.removeString(this.__hx_hashes, this.__hx_length, res2);
				haxe.lang.FieldLookup.removeDynamic(this.__hx_dynamics, this.__hx_length, res2);
				this.__hx_length--;
			}
			
		}
		
		this.__hx_hashes_f = haxe.lang.FieldLookup.insertString(this.__hx_hashes_f, this.__hx_length_f,  ~ (res) , field);
		this.__hx_dynamics_f = haxe.lang.FieldLookup.insertFloat(this.__hx_dynamics_f, this.__hx_length_f,  ~ (res) , value);
		this.__hx_length_f++;
		return value;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		int i;
		i = 0;
		while (( i < this.__hx_length ))
		{
			baseArr.push(this.__hx_hashes[i++]);
		}
		
		i = 0;
		while (( i < this.__hx_length_f ))
		{
			baseArr.push(this.__hx_hashes_f[i++]);
		}
		
		super.__hx_getFields(baseArr);
	}
	
	
}


